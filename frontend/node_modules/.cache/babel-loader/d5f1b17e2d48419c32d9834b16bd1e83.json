{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Admin\\\\Desktop\\\\freelancerCoder\\\\Ecommerce\\\\frontend\\\\src\\\\components\\\\admin\\\\Dashboard\\\\Subscriber\\\\DashboardSubscriberEdit.js\";\nimport React, { useEffect, useRef, useState } from \"react\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faTimes } from \"@fortawesome/free-solid-svg-icons\";\nimport axios from \"axios\";\nexport default function DashboardSubscriberCreate(props) {\n  const createForm = useRef();\n  const [subscriberEmail, setSubscriberEmail] = useState(\"\");\n  const email = props.email;\n  useEffect(() => {\n    if (email) {\n      setSubscriberEmail(email.subscriberEmail);\n    }\n  }, [email]);\n\n  const onSubmit = event => {\n    event.preventDefault();\n    axios.post(`http://localhost:4000/email/update/${email._id}`, {\n      subscriberEmail: subscriberEmail\n    }).then(() => {\n      props.setCloseEditFunc(false);\n      props.setToastFunc(true);\n    });\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"DashboardProductInfo\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"create-box\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"create-box-title flex\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"create-box-title-text\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 11\n    }\n  }, \"Email infomation\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"create-box-title-close flex-center\",\n    onClick: () => {\n      props.setCloseEditFunc(false);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(FontAwesomeIcon, {\n    icon: faTimes,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 13\n    }\n  }))), /*#__PURE__*/React.createElement(\"form\", {\n    onSubmit: onSubmit,\n    encType: \"multipart/form-data\",\n    ref: createForm,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"create-box-row flex\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"dashboard-left flex\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 13\n    }\n  }, \"Email\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"dashboard-right\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    name: \"email\",\n    value: subscriberEmail || \"\",\n    onChange: event => {\n      setSubscriberEmail(event.target.value);\n    },\n    required: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 15\n    }\n  }))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"flex-center\",\n    style: {\n      marginTop: \"40px\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    className: \"create-box-btn btn\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 13\n    }\n  }, \"Edit subscriber\")))));\n}","map":{"version":3,"sources":["C:/Users/Admin/Desktop/freelancerCoder/Ecommerce/frontend/src/components/admin/Dashboard/Subscriber/DashboardSubscriberEdit.js"],"names":["React","useEffect","useRef","useState","FontAwesomeIcon","faTimes","axios","DashboardSubscriberCreate","props","createForm","subscriberEmail","setSubscriberEmail","email","onSubmit","event","preventDefault","post","_id","then","setCloseEditFunc","setToastFunc","target","value","marginTop"],"mappings":"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","sourcesContent":["import React, { useEffect, useRef, useState } from \"react\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faTimes } from \"@fortawesome/free-solid-svg-icons\";\r\nimport axios from \"axios\";\r\n\r\nexport default function DashboardSubscriberCreate(props) {\r\n  const createForm = useRef();\r\n\r\n  const [subscriberEmail, setSubscriberEmail] = useState(\"\");\r\n\r\n  const email = props.email;\r\n\r\n  useEffect(() => {\r\n    if (email) {\r\n      setSubscriberEmail(email.subscriberEmail);\r\n    }\r\n  }, [email]);\r\n\r\n  const onSubmit = (event) => {\r\n    event.preventDefault();\r\n\r\n    axios\r\n      .post(`http://localhost:4000/email/update/${email._id}`, {\r\n        subscriberEmail: subscriberEmail,\r\n      })\r\n      .then(() => {\r\n        props.setCloseEditFunc(false);\r\n        props.setToastFunc(true);\r\n      });\r\n  };\r\n\r\n  return (\r\n    <div className=\"DashboardProductInfo\">\r\n      <div className=\"create-box\">\r\n        <div className=\"create-box-title flex\">\r\n          <div className=\"create-box-title-text\">Email infomation</div>\r\n          <div\r\n            className=\"create-box-title-close flex-center\"\r\n            onClick={() => {\r\n              props.setCloseEditFunc(false);\r\n            }}\r\n          >\r\n            <FontAwesomeIcon icon={faTimes} />\r\n          </div>\r\n        </div>\r\n        <form\r\n          onSubmit={onSubmit}\r\n          encType=\"multipart/form-data\"\r\n          ref={createForm}\r\n        >\r\n          <div className=\"create-box-row flex\">\r\n            <div className=\"dashboard-left flex\">Email</div>\r\n            <div className=\"dashboard-right\">\r\n              <input\r\n                type=\"text\"\r\n                name=\"email\"\r\n                value={subscriberEmail || \"\"}\r\n                onChange={(event) => {\r\n                  setSubscriberEmail(event.target.value);\r\n                }}\r\n                required\r\n              ></input>\r\n            </div>\r\n          </div>\r\n          <div className=\"flex-center\" style={{ marginTop: \"40px\" }}>\r\n            <button className=\"create-box-btn btn\">Edit subscriber</button>\r\n          </div>\r\n        </form>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}