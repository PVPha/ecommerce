{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Admin\\\\Desktop\\\\freelancerCoder\\\\Ecommerce\\\\frontend\\\\src\\\\components\\\\admin\\\\Dashboard\\\\Main\\\\DashboardMain.js\";\nimport React, { useEffect, useState } from \"react\";\nimport \"../../../../App.css\";\nimport \"../../../../Styles/Dashboard.css\";\nimport { faFileInvoice, faMoneyBillWave, faStar, faTasks, faTshirt, faUser } from \"@fortawesome/free-solid-svg-icons\";\nimport DashboardTotalCount from \"./DashboardTotalCount\";\nimport DashboardLocation from \"./DashboardLocation\";\nimport DashboardTopFive from \"./DashboardTopFive\";\nimport DashboardRecentReview from \"./DashboardRecentReview\";\nimport axios from \"axios\";\nimport DashboardChart from \"./DashboardChart\";\nimport DashboardTodoList from \"./DashboardTodoList\";\nimport DashboardChartPie from \"./DashboardChartPie\";\nimport DashboardChartLine from \"./DashboardChartLine\";\nexport default function DashboardMain() {\n  const [products, setProducts] = useState([]);\n  const [order, setOrder] = useState([]);\n  const [email, setEmail] = useState([]);\n  const [user, setUser] = useState([]);\n  const [topCustomer, setTopCusomer] = useState([]);\n  const [topProductSales, setTopProductSales] = useState([]);\n  const [totalIncome, setTotalIncome] = useState(0);\n  const [totalSale, setTotalSale] = useState(0);\n  const [orderMonthPercent, setOrderMonthPercent] = useState({});\n  const [saleMonthPercent, setSaleMonthPercent] = useState({});\n  const [incomeMonthPercent, setIncomeMonthPercent] = useState({});\n  useEffect(() => {\n    axios.get(`http://localhost:4000/products`).then(res => {\n      setProducts(res.data);\n      let virtualProducts = [...res.data];\n      virtualProducts.sort((a, b) => b.productSold - a.productSold);\n      let virtualProducts2 = [];\n\n      for (let i in virtualProducts) {\n        let data = { ...virtualProducts[i],\n          count: virtualProducts[i].productSold\n        };\n        virtualProducts2.push(data);\n      }\n\n      setTopProductSales(virtualProducts2);\n    });\n    axios.get(`http://localhost:4000/users/list`).then(res => {\n      setUser(res.data);\n    });\n    axios.get(`http://localhost:4000/email`).then(res => {\n      setEmail(res.data);\n    });\n    axios.get(`http://localhost:4000/order`).then(res => {\n      setOrder(res.data);\n      const topCustomer2 = Object.values(res.data.reduce((a, {\n        orderEmail,\n        orderName,\n        orderTotal,\n        orderAvatar\n      }) => {\n        a[orderEmail] = a[orderEmail] || {\n          orderEmail,\n          orderName,\n          orderAvatar,\n          orderTotal,\n          count: 0\n        };\n        a[orderEmail].count++;\n        return a;\n      }, Object.create(null)));\n      topCustomer2.sort((a, b) => b.count - a.count);\n      setTopCusomer(topCustomer2);\n      var totalIncome = 0;\n      var totalSale = 0;\n\n      for (let i in res.data) {\n        for (let j in res.data[i].orderList) {\n          totalSale += res.data[i].orderList[j].amount;\n        }\n\n        totalIncome += res.data[i].orderTotal;\n      }\n\n      setTotalSale(totalSale);\n      setTotalIncome(totalIncome);\n      const currentMonth = new Date().getMonth() + 1;\n      const currentYear = new Date().getFullYear();\n      let lastYear = new Date().getFullYear();\n      let lastMonth = 0;\n\n      if (currentMonth === 1) {\n        lastMonth = 12;\n        lastYear = currentYear - 1;\n      } else {\n        lastMonth = currentMonth - 1;\n        lastYear = currentYear;\n      }\n\n      const currentOrder = [];\n      const lastMonthOrder = [];\n      let currentTotalIncome = 0;\n      let currentTotalSale = 0;\n      let lastCurrentTotalIncome = 0;\n      let lastCurrentTotalSale = 0;\n\n      for (let i in res.data) {\n        if (new Date(res.data[i].orderDate).getMonth() + 1 === currentMonth && new Date(res.data[i].orderDate).getFullYear() === currentYear) {\n          currentOrder.push(res.data[i]);\n          currentTotalIncome += res.data[i].orderTotal;\n        }\n\n        if (new Date(res.data[i].orderDate).getMonth() + 1 === lastMonth && new Date(res.data[i].orderDate).getFullYear() === lastYear) {\n          lastMonthOrder.push(res.data[i]);\n          lastCurrentTotalIncome += res.data[i].orderTotal;\n        }\n\n        for (let j in res.data[i].orderList) {\n          if (new Date(res.data[i].orderDate).getMonth() + 1 === currentMonth && new Date(res.data[i].orderDate).getFullYear() === currentYear) {\n            currentTotalSale += res.data[i].orderList[j].amount;\n          }\n\n          if (new Date(res.data[i].orderDate).getMonth() + 1 === lastMonth && new Date(res.data[i].orderDate).getFullYear() === lastYear) {\n            lastCurrentTotalSale += res.data[i].orderList[j].amount;\n          }\n        }\n      }\n\n      if (currentOrder.length >= lastMonthOrder.length) {\n        setOrderMonthPercent({\n          percent: Math.ceil((currentOrder.length - lastMonthOrder.length) / lastMonthOrder.length * 100),\n          isDecrease: true\n        });\n      } else {\n        setOrderMonthPercent({\n          percent: Math.ceil((lastMonthOrder.length - currentOrder.length) / lastMonthOrder.length * 100),\n          isDecrease: false\n        });\n      }\n\n      if (currentTotalSale >= lastCurrentTotalSale) {\n        setSaleMonthPercent({\n          percent: Math.ceil((currentTotalSale - lastCurrentTotalSale) / lastCurrentTotalSale * 100),\n          isDecrease: true\n        });\n      } else {\n        setSaleMonthPercent({\n          percent: Math.ceil((lastCurrentTotalSale - currentTotalSale) / lastCurrentTotalSale * 100),\n          isDecrease: false\n        });\n      }\n\n      if (currentTotalIncome >= lastCurrentTotalIncome) {\n        setIncomeMonthPercent({\n          percent: Math.ceil((currentTotalIncome - lastCurrentTotalIncome) / lastCurrentTotalIncome * 100),\n          isDecrease: true\n        });\n      } else {\n        setIncomeMonthPercent({\n          percent: Math.ceil((lastCurrentTotalIncome - currentTotalIncome) / lastCurrentTotalIncome * 100),\n          isDecrease: false\n        });\n      }\n    });\n  }, []);\n  const totalCount = [{\n    id: 1,\n    title: \"Total orders\",\n    count: order.length,\n    percent: orderMonthPercent.percent,\n    isDecrease: orderMonthPercent.isDecrease,\n    color: \"orange\",\n    icon: faFileInvoice\n  }, {\n    id: 2,\n    title: \"Total sales\",\n    count: `${totalSale}`,\n    percent: saleMonthPercent.percent,\n    isDecrease: saleMonthPercent.isDecrease,\n    color: \"pink\",\n    icon: faTshirt\n  }, {\n    id: 3,\n    title: \"Income\",\n    count: `${totalIncome}Ä‘`,\n    percent: incomeMonthPercent.percent,\n    isDecrease: incomeMonthPercent.isDecrease,\n    color: \"green\",\n    icon: faMoneyBillWave\n  }, {\n    id: 4,\n    title: \"Users\",\n    count: user.length,\n    percent: 20,\n    isDecrease: true,\n    color: \"lightblue\",\n    icon: faUser\n  }];\n  const recentVote = [];\n\n  if (products.length > 0) {\n    for (let i = 0; i < products.length; i++) {\n      const productVote = products[i].productVote;\n\n      for (let j = 0; j < productVote.length; j++) {\n        const newRatingDate = new Date(productVote[j].ratingDate);\n        productVote[j].productName = products[i].productName;\n\n        if (newRatingDate.getDate() === new Date().getDate()) {\n          let hours = newRatingDate.getHours().toString();\n          let minutes = newRatingDate.getMinutes().toString();\n\n          if (hours < 10) {\n            hours = \"0\" + hours;\n          }\n\n          if (minutes < 10) {\n            minutes = \"0\" + minutes;\n          }\n\n          productVote[j].ratingHours = hours;\n          productVote[j].ratingMinutes = minutes;\n        } else {\n          let days = newRatingDate.getDate().toString();\n          let months = (newRatingDate.getMonth() + 1).toString();\n\n          if (days < 10) {\n            days = \"0\" + days;\n          }\n\n          if (months < 10) {\n            months = \"0\" + months;\n          }\n\n          productVote[j].ratingDays = days;\n          productVote[j].ratingMonths = months;\n          productVote[j].ratingYears = newRatingDate.getFullYear().toString();\n        }\n\n        recentVote.push(productVote[j]);\n      }\n    }\n  }\n\n  if (recentVote) {\n    recentVote.sort(function (a, b) {\n      return new Date(b.ratingDate) - new Date(a.ratingDate);\n    });\n  }\n\n  const topRecentVote = recentVote.splice(0, 5);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"dashboard-main\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 278,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"row flex\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 279,\n      columnNumber: 7\n    }\n  }, totalCount.map((item, index) => {\n    return /*#__PURE__*/React.createElement(DashboardTotalCount, {\n      key: index,\n      item: item,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 281,\n        columnNumber: 18\n      }\n    });\n  })), /*#__PURE__*/React.createElement(DashboardLocation, {\n    order: order,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 284,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"row flex\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 285,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(DashboardTopFive, {\n    icon: faUser,\n    title: \"Top customers by orders\",\n    color: \"lightblue\",\n    data: topCustomer2,\n    table: [{\n      title: \"User name\"\n    }, {\n      title: \"Total orders\"\n    }],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 286,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(DashboardTopFive, {\n    icon: faTshirt,\n    title: \"Top products by selling\",\n    color: \"pink\",\n    data: topProductSales,\n    table: [{\n      title: \"Product name\"\n    }, {\n      title: \"Total sales\"\n    }],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 300,\n      columnNumber: 9\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"row flex\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 315,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(DashboardChartPie, {\n    email: email,\n    color: \"pink\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 316,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(DashboardChart, {\n    products: products,\n    order: order,\n    color: \"lightblue\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 317,\n      columnNumber: 9\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"row flex\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 319,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(DashboardRecentReview, {\n    icon: faStar,\n    title: \"Recent Reviews\",\n    color: \"orange\",\n    topRecentVote: topRecentVote,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 320,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(DashboardTodoList // recent orders\n  , {\n    icon: faTasks,\n    title: \"Todo list\",\n    color: \"green\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 326,\n      columnNumber: 9\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"row flex\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 332,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(DashboardChartLine, {\n    icon: faTasks,\n    order: order,\n    color: \"pink\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 333,\n      columnNumber: 9\n    }\n  })));\n}","map":{"version":3,"sources":["C:/Users/Admin/Desktop/freelancerCoder/Ecommerce/frontend/src/components/admin/Dashboard/Main/DashboardMain.js"],"names":["React","useEffect","useState","faFileInvoice","faMoneyBillWave","faStar","faTasks","faTshirt","faUser","DashboardTotalCount","DashboardLocation","DashboardTopFive","DashboardRecentReview","axios","DashboardChart","DashboardTodoList","DashboardChartPie","DashboardChartLine","DashboardMain","products","setProducts","order","setOrder","email","setEmail","user","setUser","topCustomer","setTopCusomer","topProductSales","setTopProductSales","totalIncome","setTotalIncome","totalSale","setTotalSale","orderMonthPercent","setOrderMonthPercent","saleMonthPercent","setSaleMonthPercent","incomeMonthPercent","setIncomeMonthPercent","get","then","res","data","virtualProducts","sort","a","b","productSold","virtualProducts2","i","count","push","topCustomer2","Object","values","reduce","orderEmail","orderName","orderTotal","orderAvatar","create","j","orderList","amount","currentMonth","Date","getMonth","currentYear","getFullYear","lastYear","lastMonth","currentOrder","lastMonthOrder","currentTotalIncome","currentTotalSale","lastCurrentTotalIncome","lastCurrentTotalSale","orderDate","length","percent","Math","ceil","isDecrease","totalCount","id","title","color","icon","recentVote","productVote","newRatingDate","ratingDate","productName","getDate","hours","getHours","toString","minutes","getMinutes","ratingHours","ratingMinutes","days","months","ratingDays","ratingMonths","ratingYears","topRecentVote","splice","map","item","index"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport \"../../../../App.css\";\r\nimport \"../../../../Styles/Dashboard.css\";\r\nimport {\r\n  faFileInvoice,\r\n  faMoneyBillWave,\r\n  faStar,\r\n  faTasks,\r\n  faTshirt,\r\n  faUser,\r\n} from \"@fortawesome/free-solid-svg-icons\";\r\nimport DashboardTotalCount from \"./DashboardTotalCount\";\r\nimport DashboardLocation from \"./DashboardLocation\";\r\nimport DashboardTopFive from \"./DashboardTopFive\";\r\nimport DashboardRecentReview from \"./DashboardRecentReview\";\r\nimport axios from \"axios\";\r\nimport DashboardChart from \"./DashboardChart\";\r\nimport DashboardTodoList from \"./DashboardTodoList\";\r\nimport DashboardChartPie from \"./DashboardChartPie\";\r\nimport DashboardChartLine from \"./DashboardChartLine\";\r\n\r\nexport default function DashboardMain() {\r\n  const [products, setProducts] = useState([]);\r\n  const [order, setOrder] = useState([]);\r\n  const [email, setEmail] = useState([]);\r\n  const [user, setUser] = useState([]);\r\n  const [topCustomer, setTopCusomer] = useState([]);\r\n  const [topProductSales, setTopProductSales] = useState([]);\r\n  const [totalIncome, setTotalIncome] = useState(0);\r\n  const [totalSale, setTotalSale] = useState(0);\r\n  const [orderMonthPercent, setOrderMonthPercent] = useState({});\r\n  const [saleMonthPercent, setSaleMonthPercent] = useState({});\r\n  const [incomeMonthPercent, setIncomeMonthPercent] = useState({});\r\n\r\n  useEffect(() => {\r\n    axios.get(`http://localhost:4000/products`).then((res) => {\r\n      setProducts(res.data);\r\n      let virtualProducts = [...res.data];\r\n      virtualProducts.sort((a, b) => b.productSold - a.productSold);\r\n      let virtualProducts2 = [];\r\n      for (let i in virtualProducts) {\r\n        let data = {\r\n          ...virtualProducts[i],\r\n          count: virtualProducts[i].productSold,\r\n        };\r\n        virtualProducts2.push(data);\r\n      }\r\n      setTopProductSales(virtualProducts2);\r\n    });\r\n    axios.get(`http://localhost:4000/users/list`).then((res) => {\r\n      setUser(res.data);\r\n    });\r\n    axios.get(`http://localhost:4000/email`).then((res) => {\r\n      setEmail(res.data);\r\n    });\r\n    axios.get(`http://localhost:4000/order`).then((res) => {\r\n      setOrder(res.data);\r\n      const topCustomer2 = Object.values(\r\n        res.data.reduce(\r\n          (a, { orderEmail, orderName, orderTotal, orderAvatar }) => {\r\n            a[orderEmail] = a[orderEmail] || {\r\n              orderEmail,\r\n              orderName,\r\n              orderAvatar,\r\n              orderTotal,\r\n              count: 0,\r\n            };\r\n            a[orderEmail].count++;\r\n            return a;\r\n          },\r\n          Object.create(null)\r\n        )\r\n      );\r\n      topCustomer2.sort((a, b) => b.count - a.count);\r\n      setTopCusomer(topCustomer2);\r\n\r\n      var totalIncome = 0;\r\n      var totalSale = 0;\r\n      for (let i in res.data) {\r\n        for (let j in res.data[i].orderList) {\r\n          totalSale += res.data[i].orderList[j].amount;\r\n        }\r\n        totalIncome += res.data[i].orderTotal;\r\n      }\r\n      setTotalSale(totalSale);\r\n      setTotalIncome(totalIncome);\r\n\r\n      const currentMonth = new Date().getMonth() + 1;\r\n      const currentYear = new Date().getFullYear();\r\n      let lastYear = new Date().getFullYear();\r\n      let lastMonth = 0;\r\n      if (currentMonth === 1) {\r\n        lastMonth = 12;\r\n        lastYear = currentYear - 1;\r\n      } else {\r\n        lastMonth = currentMonth - 1;\r\n        lastYear = currentYear;\r\n      }\r\n      const currentOrder = [];\r\n      const lastMonthOrder = [];\r\n      let currentTotalIncome = 0;\r\n      let currentTotalSale = 0;\r\n      let lastCurrentTotalIncome = 0;\r\n      let lastCurrentTotalSale = 0;\r\n      for (let i in res.data) {\r\n        if (\r\n          new Date(res.data[i].orderDate).getMonth() + 1 === currentMonth &&\r\n          new Date(res.data[i].orderDate).getFullYear() === currentYear\r\n        ) {\r\n          currentOrder.push(res.data[i]);\r\n          currentTotalIncome += res.data[i].orderTotal;\r\n        }\r\n        if (\r\n          new Date(res.data[i].orderDate).getMonth() + 1 === lastMonth &&\r\n          new Date(res.data[i].orderDate).getFullYear() === lastYear\r\n        ) {\r\n          lastMonthOrder.push(res.data[i]);\r\n          lastCurrentTotalIncome += res.data[i].orderTotal;\r\n        }\r\n        for (let j in res.data[i].orderList) {\r\n          if (\r\n            new Date(res.data[i].orderDate).getMonth() + 1 === currentMonth &&\r\n            new Date(res.data[i].orderDate).getFullYear() === currentYear\r\n          ) {\r\n            currentTotalSale += res.data[i].orderList[j].amount;\r\n          }\r\n          if (\r\n            new Date(res.data[i].orderDate).getMonth() + 1 === lastMonth &&\r\n            new Date(res.data[i].orderDate).getFullYear() === lastYear\r\n          ) {\r\n            lastCurrentTotalSale += res.data[i].orderList[j].amount;\r\n          }\r\n        }\r\n      }\r\n\r\n      if (currentOrder.length >= lastMonthOrder.length) {\r\n        setOrderMonthPercent({\r\n          percent: Math.ceil(\r\n            ((currentOrder.length - lastMonthOrder.length) /\r\n              lastMonthOrder.length) *\r\n              100\r\n          ),\r\n          isDecrease: true,\r\n        });\r\n      } else {\r\n        setOrderMonthPercent({\r\n          percent: Math.ceil(\r\n            ((lastMonthOrder.length - currentOrder.length) /\r\n              lastMonthOrder.length) *\r\n              100\r\n          ),\r\n          isDecrease: false,\r\n        });\r\n      }\r\n      if (currentTotalSale >= lastCurrentTotalSale) {\r\n        setSaleMonthPercent({\r\n          percent: Math.ceil(\r\n            ((currentTotalSale - lastCurrentTotalSale) / lastCurrentTotalSale) *\r\n              100\r\n          ),\r\n          isDecrease: true,\r\n        });\r\n      } else {\r\n        setSaleMonthPercent({\r\n          percent: Math.ceil(\r\n            ((lastCurrentTotalSale - currentTotalSale) / lastCurrentTotalSale) *\r\n              100\r\n          ),\r\n          isDecrease: false,\r\n        });\r\n      }\r\n      if (currentTotalIncome >= lastCurrentTotalIncome) {\r\n        setIncomeMonthPercent({\r\n          percent: Math.ceil(\r\n            ((currentTotalIncome - lastCurrentTotalIncome) /\r\n              lastCurrentTotalIncome) *\r\n              100\r\n          ),\r\n          isDecrease: true,\r\n        });\r\n      } else {\r\n        setIncomeMonthPercent({\r\n          percent: Math.ceil(\r\n            ((lastCurrentTotalIncome - currentTotalIncome) /\r\n              lastCurrentTotalIncome) *\r\n              100\r\n          ),\r\n          isDecrease: false,\r\n        });\r\n      }\r\n    });\r\n  }, []);\r\n\r\n  const totalCount = [\r\n    {\r\n      id: 1,\r\n      title: \"Total orders\",\r\n      count: order.length,\r\n      percent: orderMonthPercent.percent,\r\n      isDecrease: orderMonthPercent.isDecrease,\r\n      color: \"orange\",\r\n      icon: faFileInvoice,\r\n    },\r\n    {\r\n      id: 2,\r\n      title: \"Total sales\",\r\n      count: `${totalSale}`,\r\n      percent: saleMonthPercent.percent,\r\n      isDecrease: saleMonthPercent.isDecrease,\r\n      color: \"pink\",\r\n      icon: faTshirt,\r\n    },\r\n    {\r\n      id: 3,\r\n      title: \"Income\",\r\n      count: `${totalIncome}Ä‘`,\r\n      percent: incomeMonthPercent.percent,\r\n      isDecrease: incomeMonthPercent.isDecrease,\r\n      color: \"green\",\r\n      icon: faMoneyBillWave,\r\n    },\r\n    {\r\n      id: 4,\r\n      title: \"Users\",\r\n      count: user.length,\r\n      percent: 20,\r\n      isDecrease: true,\r\n      color: \"lightblue\",\r\n      icon: faUser,\r\n    },\r\n  ];\r\n\r\n  const recentVote = [];\r\n  if (products.length > 0) {\r\n    for (let i = 0; i < products.length; i++) {\r\n      const productVote = products[i].productVote;\r\n      for (let j = 0; j < productVote.length; j++) {\r\n        const newRatingDate = new Date(productVote[j].ratingDate);\r\n        productVote[j].productName = products[i].productName;\r\n        if (newRatingDate.getDate() === new Date().getDate()) {\r\n          let hours = newRatingDate.getHours().toString();\r\n          let minutes = newRatingDate.getMinutes().toString();\r\n          if (hours < 10) {\r\n            hours = \"0\" + hours;\r\n          }\r\n          if (minutes < 10) {\r\n            minutes = \"0\" + minutes;\r\n          }\r\n          productVote[j].ratingHours = hours;\r\n          productVote[j].ratingMinutes = minutes;\r\n        } else {\r\n          let days = newRatingDate.getDate().toString();\r\n          let months = (newRatingDate.getMonth() + 1).toString();\r\n          if (days < 10) {\r\n            days = \"0\" + days;\r\n          }\r\n          if (months < 10) {\r\n            months = \"0\" + months;\r\n          }\r\n          productVote[j].ratingDays = days;\r\n          productVote[j].ratingMonths = months;\r\n          productVote[j].ratingYears = newRatingDate.getFullYear().toString();\r\n        }\r\n        recentVote.push(productVote[j]);\r\n      }\r\n    }\r\n  }\r\n\r\n  if (recentVote) {\r\n    recentVote.sort(function (a, b) {\r\n      return new Date(b.ratingDate) - new Date(a.ratingDate);\r\n    });\r\n  }\r\n\r\n  const topRecentVote = recentVote.splice(0, 5);\r\n\r\n  return (\r\n    <div className=\"dashboard-main\">\r\n      <div className=\"row flex\">\r\n        {totalCount.map((item, index) => {\r\n          return <DashboardTotalCount key={index} item={item} />;\r\n        })}\r\n      </div>\r\n      <DashboardLocation order={order} />\r\n      <div className=\"row flex\">\r\n        <DashboardTopFive\r\n          icon={faUser}\r\n          title=\"Top customers by orders\"\r\n          color=\"lightblue\"\r\n          data={topCustomer2}\r\n          table={[\r\n            {\r\n              title: \"User name\",\r\n            },\r\n            {\r\n              title: \"Total orders\",\r\n            },\r\n          ]}\r\n        />\r\n        <DashboardTopFive\r\n          icon={faTshirt}\r\n          title=\"Top products by selling\"\r\n          color=\"pink\"\r\n          data={topProductSales}\r\n          table={[\r\n            {\r\n              title: \"Product name\",\r\n            },\r\n            {\r\n              title: \"Total sales\",\r\n            },\r\n          ]}\r\n        />\r\n      </div>\r\n      <div className=\"row flex\">\r\n        <DashboardChartPie email={email} color=\"pink\" />\r\n        <DashboardChart products={products} order={order} color=\"lightblue\" />\r\n      </div>\r\n      <div className=\"row flex\">\r\n        <DashboardRecentReview\r\n          icon={faStar}\r\n          title=\"Recent Reviews\"\r\n          color=\"orange\"\r\n          topRecentVote={topRecentVote}\r\n        />\r\n        <DashboardTodoList // recent orders\r\n          icon={faTasks}\r\n          title=\"Todo list\"\r\n          color=\"green\"\r\n        />\r\n      </div>\r\n      <div className=\"row flex\">\r\n        <DashboardChartLine icon={faTasks} order={order} color=\"pink\" />\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}