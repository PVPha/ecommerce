{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Admin\\\\Desktop\\\\freelancerCoder\\\\Ecommerce\\\\frontend\\\\src\\\\components\\\\admin\\\\Dashboard\\\\Main\\\\DashboardChart.js\";\nimport React, { useEffect, useState } from \"react\";\nimport \"../../../../App.css\";\nimport \"../../../../Styles/Dashboard.css\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faChartBar, faClock } from \"@fortawesome/free-solid-svg-icons\";\nimport { Bar } from \"@reactchartjs/react-chart.js\";\nexport default function DashboardChart(props) {\n  const products = props.products;\n  const order = props.order;\n  const [data, setData] = useState({});\n  useEffect(() => {\n    if (products.length > 0 && order.length > 0) {\n      const allCate = Object.values(products.reduce((a, {\n        productCate\n      }) => {\n        a[productCate] = a[productCate] || {\n          productCate,\n          count: 0\n        };\n        return a;\n      }, Object.create(null)));\n\n      for (let i in allCate) {\n        for (let j in products) {\n          if (allCate[i].productCate === products[j].productCate) {\n            allCate[i].count += products[j].productSold;\n          }\n        }\n      }\n\n      allCate.sort((a, b) => b.count - a.count);\n      const topCate = allCate.splice(0, 5); // console.log(topCate);\n\n      const topCateList = [];\n      const dataChart = \"\";\n\n      for (let i in topCate) {\n        topCateList.push(topCate[i].productCate);\n        dataChart = \"data: [\" + `${topCate[i].count},` + \"],\";\n      }\n\n      console.log(dataChart); // setData({\n      //   labels: topCateList,\n      //   datasets: [\n      //     {\n      //       label: \"\",\n      //       data: [\n      //         topCate[0].count,\n      //         topCate[1].count,\n      //         topCate[2].count,\n      //         topCate[3].count,\n      //         topCate[4].count,\n      //       ],\n      //       backgroundColor: [\n      //         \"rgba(255, 99, 132, 0.8)\",\n      //         \"rgba(54, 162, 235, 0.8)\",\n      //         \"rgba(255, 206, 86, 0.8)\",\n      //         \"rgba(75, 192, 192, 0.8)\",\n      //         \"rgba(153, 102, 255, 0.8)\",\n      //         \"rgba(255, 159, 64, 0.8)\",\n      //       ],\n      //       borderColor: [\n      //         \"rgba(255, 99, 132, 1)\",\n      //         \"rgba(54, 162, 235, 1)\",\n      //         \"rgba(255, 206, 86, 1)\",\n      //         \"rgba(75, 192, 192, 1)\",\n      //         \"rgba(153, 102, 255, 1)\",\n      //         \"rgba(255, 159, 64, 1)\",\n      //       ],\n      //       borderWidth: 1,\n      //     },\n      //   ],\n      // });\n    }\n  }, [products, order]);\n  const options = {\n    legend: {\n      display: false\n    },\n    scales: {\n      xAxes: [{\n        gridLines: {\n          display: false\n        }\n      }],\n      yAxes: [{\n        display: true,\n        gridLines: {\n          display: true,\n          borderDash: [4, 2],\n          color: \"#ddd\"\n        }\n      }]\n    }\n  };\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"chart flex-col\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: `headerbox flex-center ${props.color}`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(FontAwesomeIcon, {\n    icon: faChartBar,\n    className: \"icon\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 9\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"top-location-container\",\n    style: {\n      height: \"max-content\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"headerbox-header\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 11\n    }\n  }, \"2020 Sales by Top 5 Categories\")), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"top-location-content flex\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"top-location-map\",\n    style: {\n      margin: \"0\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Bar, {\n    data: data,\n    options: options,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 13\n    }\n  }))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"count-line\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"count-status flex-center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(FontAwesomeIcon, {\n    icon: faClock,\n    className: \"count-up\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 11\n    }\n  }, \"Updated 3 minutes ago\"))));\n}","map":{"version":3,"sources":["C:/Users/Admin/Desktop/freelancerCoder/Ecommerce/frontend/src/components/admin/Dashboard/Main/DashboardChart.js"],"names":["React","useEffect","useState","FontAwesomeIcon","faChartBar","faClock","Bar","DashboardChart","props","products","order","data","setData","length","allCate","Object","values","reduce","a","productCate","count","create","i","j","productSold","sort","b","topCate","splice","topCateList","dataChart","push","console","log","options","legend","display","scales","xAxes","gridLines","yAxes","borderDash","color","height","margin"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,OAAO,qBAAP;AACA,OAAO,kCAAP;AACA,SAASC,eAAT,QAAgC,gCAAhC;AACA,SAASC,UAAT,EAAqBC,OAArB,QAAoC,mCAApC;AACA,SAASC,GAAT,QAAoB,8BAApB;AAEA,eAAe,SAASC,cAAT,CAAwBC,KAAxB,EAA+B;AAC5C,QAAMC,QAAQ,GAAGD,KAAK,CAACC,QAAvB;AACA,QAAMC,KAAK,GAAGF,KAAK,CAACE,KAApB;AACA,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBV,QAAQ,CAAC,EAAD,CAAhC;AAEAD,EAAAA,SAAS,CAAC,MAAM;AACd,QAAIQ,QAAQ,CAACI,MAAT,GAAkB,CAAlB,IAAuBH,KAAK,CAACG,MAAN,GAAe,CAA1C,EAA6C;AAC3C,YAAMC,OAAO,GAAGC,MAAM,CAACC,MAAP,CACdP,QAAQ,CAACQ,MAAT,CAAgB,CAACC,CAAD,EAAI;AAAEC,QAAAA;AAAF,OAAJ,KAAwB;AACtCD,QAAAA,CAAC,CAACC,WAAD,CAAD,GAAiBD,CAAC,CAACC,WAAD,CAAD,IAAkB;AAAEA,UAAAA,WAAF;AAAeC,UAAAA,KAAK,EAAE;AAAtB,SAAnC;AACA,eAAOF,CAAP;AACD,OAHD,EAGGH,MAAM,CAACM,MAAP,CAAc,IAAd,CAHH,CADc,CAAhB;;AAOA,WAAK,IAAIC,CAAT,IAAcR,OAAd,EAAuB;AACrB,aAAK,IAAIS,CAAT,IAAcd,QAAd,EAAwB;AACtB,cAAIK,OAAO,CAACQ,CAAD,CAAP,CAAWH,WAAX,KAA2BV,QAAQ,CAACc,CAAD,CAAR,CAAYJ,WAA3C,EAAwD;AACtDL,YAAAA,OAAO,CAACQ,CAAD,CAAP,CAAWF,KAAX,IAAoBX,QAAQ,CAACc,CAAD,CAAR,CAAYC,WAAhC;AACD;AACF;AACF;;AACDV,MAAAA,OAAO,CAACW,IAAR,CAAa,CAACP,CAAD,EAAIQ,CAAJ,KAAUA,CAAC,CAACN,KAAF,GAAUF,CAAC,CAACE,KAAnC;AACA,YAAMO,OAAO,GAAGb,OAAO,CAACc,MAAR,CAAe,CAAf,EAAkB,CAAlB,CAAhB,CAhB2C,CAiB3C;;AACA,YAAMC,WAAW,GAAG,EAApB;AACA,YAAMC,SAAS,GAAG,EAAlB;;AACA,WAAK,IAAIR,CAAT,IAAcK,OAAd,EAAuB;AACrBE,QAAAA,WAAW,CAACE,IAAZ,CAAiBJ,OAAO,CAACL,CAAD,CAAP,CAAWH,WAA5B;AACAW,QAAAA,SAAS,GAAG,YAAa,GAAEH,OAAO,CAACL,CAAD,CAAP,CAAWF,KAAM,GAAhC,GAAqC,IAAjD;AACD;;AACDY,MAAAA,OAAO,CAACC,GAAR,CAAYH,SAAZ,EAxB2C,CAyB3C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACD;AACF,GA3DQ,EA2DN,CAACrB,QAAD,EAAWC,KAAX,CA3DM,CAAT;AA6DA,QAAMwB,OAAO,GAAG;AACdC,IAAAA,MAAM,EAAE;AACNC,MAAAA,OAAO,EAAE;AADH,KADM;AAIdC,IAAAA,MAAM,EAAE;AACNC,MAAAA,KAAK,EAAE,CACL;AACEC,QAAAA,SAAS,EAAE;AACTH,UAAAA,OAAO,EAAE;AADA;AADb,OADK,CADD;AAQNI,MAAAA,KAAK,EAAE,CACL;AACEJ,QAAAA,OAAO,EAAE,IADX;AAEEG,QAAAA,SAAS,EAAE;AACTH,UAAAA,OAAO,EAAE,IADA;AAETK,UAAAA,UAAU,EAAE,CAAC,CAAD,EAAI,CAAJ,CAFH;AAGTC,UAAAA,KAAK,EAAE;AAHE;AAFb,OADK;AARD;AAJM,GAAhB;AAyBA,sBACE;AAAK,IAAA,SAAS,EAAC,gBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAK,IAAA,SAAS,EAAG,yBAAwBlC,KAAK,CAACkC,KAAM,EAArD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,eAAD;AAAiB,IAAA,IAAI,EAAEtC,UAAvB;AAAmC,IAAA,SAAS,EAAC,MAA7C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CADF,eAIE;AAAK,IAAA,SAAS,EAAC,wBAAf;AAAwC,IAAA,KAAK,EAAE;AAAEuC,MAAAA,MAAM,EAAE;AAAV,KAA/C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAK,IAAA,SAAS,EAAC,kBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sCADF,CADF,eAIE;AAAK,IAAA,SAAS,EAAC,2BAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAK,IAAA,SAAS,EAAC,kBAAf;AAAkC,IAAA,KAAK,EAAE;AAAEC,MAAAA,MAAM,EAAE;AAAV,KAAzC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,GAAD;AAAK,IAAA,IAAI,EAAEjC,IAAX;AAAiB,IAAA,OAAO,EAAEuB,OAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CADF,CAJF,eAUE;AAAK,IAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAVF,eAWE;AAAK,IAAA,SAAS,EAAC,0BAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,eAAD;AAAiB,IAAA,IAAI,EAAE7B,OAAvB;AAAgC,IAAA,SAAS,EAAC,UAA1C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,eAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6BAFF,CAXF,CAJF,CADF;AAuBD","sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport \"../../../../App.css\";\r\nimport \"../../../../Styles/Dashboard.css\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faChartBar, faClock } from \"@fortawesome/free-solid-svg-icons\";\r\nimport { Bar } from \"@reactchartjs/react-chart.js\";\r\n\r\nexport default function DashboardChart(props) {\r\n  const products = props.products;\r\n  const order = props.order;\r\n  const [data, setData] = useState({});\r\n\r\n  useEffect(() => {\r\n    if (products.length > 0 && order.length > 0) {\r\n      const allCate = Object.values(\r\n        products.reduce((a, { productCate }) => {\r\n          a[productCate] = a[productCate] || { productCate, count: 0 };\r\n          return a;\r\n        }, Object.create(null))\r\n      );\r\n\r\n      for (let i in allCate) {\r\n        for (let j in products) {\r\n          if (allCate[i].productCate === products[j].productCate) {\r\n            allCate[i].count += products[j].productSold;\r\n          }\r\n        }\r\n      }\r\n      allCate.sort((a, b) => b.count - a.count);\r\n      const topCate = allCate.splice(0, 5);\r\n      // console.log(topCate);\r\n      const topCateList = [];\r\n      const dataChart = \"\";\r\n      for (let i in topCate) {\r\n        topCateList.push(topCate[i].productCate);\r\n        dataChart = \"data: [\" + `${topCate[i].count},` + \"],\";\r\n      }\r\n      console.log(dataChart);\r\n      // setData({\r\n      //   labels: topCateList,\r\n      //   datasets: [\r\n      //     {\r\n      //       label: \"\",\r\n      //       data: [\r\n      //         topCate[0].count,\r\n      //         topCate[1].count,\r\n      //         topCate[2].count,\r\n      //         topCate[3].count,\r\n      //         topCate[4].count,\r\n      //       ],\r\n      //       backgroundColor: [\r\n      //         \"rgba(255, 99, 132, 0.8)\",\r\n      //         \"rgba(54, 162, 235, 0.8)\",\r\n      //         \"rgba(255, 206, 86, 0.8)\",\r\n      //         \"rgba(75, 192, 192, 0.8)\",\r\n      //         \"rgba(153, 102, 255, 0.8)\",\r\n      //         \"rgba(255, 159, 64, 0.8)\",\r\n      //       ],\r\n      //       borderColor: [\r\n      //         \"rgba(255, 99, 132, 1)\",\r\n      //         \"rgba(54, 162, 235, 1)\",\r\n      //         \"rgba(255, 206, 86, 1)\",\r\n      //         \"rgba(75, 192, 192, 1)\",\r\n      //         \"rgba(153, 102, 255, 1)\",\r\n      //         \"rgba(255, 159, 64, 1)\",\r\n      //       ],\r\n      //       borderWidth: 1,\r\n      //     },\r\n      //   ],\r\n      // });\r\n    }\r\n  }, [products, order]);\r\n\r\n  const options = {\r\n    legend: {\r\n      display: false,\r\n    },\r\n    scales: {\r\n      xAxes: [\r\n        {\r\n          gridLines: {\r\n            display: false,\r\n          },\r\n        },\r\n      ],\r\n      yAxes: [\r\n        {\r\n          display: true,\r\n          gridLines: {\r\n            display: true,\r\n            borderDash: [4, 2],\r\n            color: \"#ddd\",\r\n          },\r\n        },\r\n      ],\r\n    },\r\n  };\r\n\r\n  return (\r\n    <div className=\"chart flex-col\">\r\n      <div className={`headerbox flex-center ${props.color}`}>\r\n        <FontAwesomeIcon icon={faChartBar} className=\"icon\" />\r\n      </div>\r\n      <div className=\"top-location-container\" style={{ height: \"max-content\" }}>\r\n        <div className=\"headerbox-header\">\r\n          <p>2020 Sales by Top 5 Categories</p>\r\n        </div>\r\n        <div className=\"top-location-content flex\">\r\n          <div className=\"top-location-map\" style={{ margin: \"0\" }}>\r\n            <Bar data={data} options={options} />\r\n            {/* <Line data={data} options={options} />  */}\r\n          </div>\r\n        </div>\r\n        <div className=\"count-line\"></div>\r\n        <div className=\"count-status flex-center\">\r\n          <FontAwesomeIcon icon={faClock} className=\"count-up\" />\r\n          <p>Updated 3 minutes ago</p>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}