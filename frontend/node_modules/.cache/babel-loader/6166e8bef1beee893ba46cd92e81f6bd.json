{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Admin\\\\Desktop\\\\freelancerCoder\\\\Ecommerce\\\\frontend\\\\src\\\\components\\\\admin\\\\Dashboard\\\\Main\\\\DashboardChartLine.js\";\nimport React, { useEffect, useState } from 'react';\nimport '../../../../App.css';\nimport '../../../../Styles/Dashboard.css';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faChartBar, faClock } from '@fortawesome/free-solid-svg-icons';\nimport { Line } from '@reactchartjs/react-chart.js';\nexport default function DashboardChartLine(props) {\n  const order = props.order;\n  const [data, setData] = useState({});\n  useEffect(() => {\n    if (order.length > 0) {\n      const month = [{\n        id: 1,\n        totalSale: 0\n      }, {\n        id: 2,\n        totalSale: 0\n      }, {\n        id: 3,\n        totalSale: 0\n      }, {\n        id: 4,\n        totalSale: 0\n      }, {\n        id: 5,\n        totalSale: 0\n      }, {\n        id: 6,\n        totalSale: 0\n      }, {\n        id: 7,\n        totalSale: 0\n      }, {\n        id: 8,\n        totalSale: 0\n      }, {\n        id: 9,\n        totalSale: 0\n      }, {\n        id: 10,\n        totalSale: 0\n      }, {\n        id: 11,\n        totalSale: 0\n      }, {\n        id: 12,\n        totalSale: 0\n      }];\n\n      for (let i in order) {\n        for (let j in month) {\n          if (new Date(order[i].orderDate).getMonth() + 1 === month[j].id) {\n            month[j].totalSale += order[i].orderTotal;\n          }\n        }\n      }\n\n      const saleData = [];\n\n      for (let i in month) {\n        saleData.push(month[i].totalSale);\n      }\n\n      setData({\n        labels: ['Jan', 'Feb', 'Mar', 'Apr', 'Mai', 'Jun', 'Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec'],\n        datasets: [{\n          label: '',\n          data: saleData,\n          fill: false,\n          backgroundColor: 'rgb(255, 99, 132)',\n          borderColor: 'rgba(255, 99, 132, 0.9)'\n        }]\n      });\n    }\n  }, [order]);\n  const options = {\n    legend: {\n      display: false\n    },\n    scales: {\n      xAxes: [{\n        gridLines: {\n          display: false\n        }\n      }],\n      yAxes: [{\n        type: 'linear',\n        display: true,\n        position: 'left'\n      }]\n    }\n  };\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"chart chartline flex-col\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: `headerbox flex-center ${props.color}`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(FontAwesomeIcon, {\n    icon: faChartBar,\n    className: \"icon\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 17\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"top-location-container\",\n    style: {\n      height: 'max-content'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"headerbox-header\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 21\n    }\n  }, \"2020 Revenue\")), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"top-location-content flex\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"top-location-map\",\n    style: {\n      margin: '0'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(Line, {\n    data: data,\n    options: options,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 25\n    }\n  }))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"count-line\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"count-status flex-center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(FontAwesomeIcon, {\n    icon: faClock,\n    className: \"count-up\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 21\n    }\n  }), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 21\n    }\n  }, \"Updated 3 minutes ago\"))));\n}","map":{"version":3,"sources":["C:/Users/Admin/Desktop/freelancerCoder/Ecommerce/frontend/src/components/admin/Dashboard/Main/DashboardChartLine.js"],"names":["React","useEffect","useState","FontAwesomeIcon","faChartBar","faClock","Line","DashboardChartLine","props","order","data","setData","length","month","id","totalSale","i","j","Date","orderDate","getMonth","orderTotal","saleData","push","labels","datasets","label","fill","backgroundColor","borderColor","options","legend","display","scales","xAxes","gridLines","yAxes","type","position","color","height","margin"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react'\r\nimport '../../../../App.css'\r\nimport '../../../../Styles/Dashboard.css'\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { faChartBar, faClock } from '@fortawesome/free-solid-svg-icons'  \r\nimport { Line } from '@reactchartjs/react-chart.js' \r\n\r\nexport default function DashboardChartLine(props) {\r\n \r\n    const order = props.order \r\n    const [data, setData] = useState({})\r\n\r\n    useEffect(()=>{\r\n        if (order.length > 0) {\r\n            const month = [\r\n                {\r\n                    id: 1,\r\n                    totalSale: 0\r\n                },\r\n                {\r\n                    id: 2,\r\n                    totalSale: 0\r\n                },\r\n                {\r\n                    id: 3,\r\n                    totalSale: 0\r\n                },\r\n                {\r\n                    id: 4,\r\n                    totalSale: 0\r\n                },\r\n                {\r\n                    id: 5,\r\n                    totalSale: 0\r\n                },\r\n                {\r\n                    id: 6,\r\n                    totalSale: 0\r\n                },\r\n                {\r\n                    id: 7,\r\n                    totalSale: 0\r\n                },\r\n                {\r\n                    id: 8,\r\n                    totalSale: 0\r\n                },\r\n                {\r\n                    id: 9,\r\n                    totalSale: 0\r\n                },\r\n                {\r\n                    id: 10,\r\n                    totalSale: 0\r\n                },\r\n                {\r\n                    id: 11,\r\n                    totalSale: 0\r\n                },\r\n                {\r\n                    id: 12,\r\n                    totalSale: 0\r\n                }\r\n            ] \r\n            for (let i in order) { \r\n                for (let j in month) {\r\n                    if (new Date(order[i].orderDate).getMonth() + 1 === month[j].id) {\r\n                            month[j].totalSale += order[i].orderTotal\r\n                    }\r\n                }\r\n            }\r\n            const saleData = []\r\n            for (let i in month) {\r\n                saleData.push(month[i].totalSale)\r\n            }\r\n            setData({\r\n                labels: ['Jan', 'Feb', 'Mar', 'Apr', 'Mai', 'Jun', 'Jul' ,'Aug', 'Sep', 'Oct', 'Nov', 'Dec'],\r\n                datasets: [\r\n                    {\r\n                        label: '',\r\n                        data: saleData,\r\n                        fill: false,\r\n                        backgroundColor: 'rgb(255, 99, 132)',\r\n                        borderColor: 'rgba(255, 99, 132, 0.9)'\r\n                    }\r\n                ],\r\n            })\r\n        }\r\n    },[order])  \r\n\r\n    const options = {\r\n        legend: {\r\n            display: false,\r\n        },\r\n        scales: {\r\n            xAxes: [{ \r\n                gridLines: {\r\n                    display: false\r\n                }\r\n            }],\r\n            yAxes: [\r\n                {\r\n                    type: 'linear',\r\n                    display: true,\r\n                    position: 'left'\r\n                }\r\n            ],\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className=\"chart chartline flex-col\">\r\n            <div className={`headerbox flex-center ${props.color}`}>\r\n                <FontAwesomeIcon icon={faChartBar} className=\"icon\"/>\r\n            </div>\r\n            <div className=\"top-location-container\" style={{height: 'max-content'}}>\r\n                <div className=\"headerbox-header\">\r\n                    <p>2020 Revenue</p>\r\n                </div>\r\n                <div className=\"top-location-content flex\">\r\n                    <div className=\"top-location-map\" style={{margin: '0'}}>\r\n                        <Line data={data} options={options}/>\r\n                    </div>\r\n                </div>\r\n                <div className=\"count-line\"></div>\r\n                <div className=\"count-status flex-center\">\r\n                    <FontAwesomeIcon icon={faClock} className=\"count-up\"/> \r\n                    <p>Updated 3 minutes ago</p>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}"]},"metadata":{},"sourceType":"module"}