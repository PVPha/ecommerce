{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Admin\\\\Desktop\\\\freelancerCoder\\\\Ecommerce\\\\frontend\\\\src\\\\components\\\\admin\\\\Dashboard\\\\Inbox\\\\DashboardInbox.js\";\nimport React, { useRef } from \"react\";\nimport \"../../../../App.css\";\nimport \"../../../../Styles/Dashboard.css\";\nimport { useEffect, useState } from \"react\";\nimport socketIOClient from \"socket.io-client\";\nimport axios from \"axios\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faChevronLeft } from \"@fortawesome/free-solid-svg-icons\";\nconst ENDPOINT = \"http://localhost:4000\";\nexport default function DashboardInbox(props) {\n  const [allChatData, setAllChatData] = useState([]);\n  const [constAllChatData, setConstAllChatData] = useState([]);\n  const [roomId, setRoomId] = useState(0);\n  const [roomIndex, setRoomIndex] = useState(0);\n  const [chatInput, setChatInput] = useState(\"\");\n  const [searchInput, setSearchInput] = useState(\"\");\n  const socket = socketIOClient(ENDPOINT);\n  useEffect(() => {\n    socket.emit(\"join\", {\n      sessionId: \"admin\",\n      isAdmin: true\n    });\n    socket.on(\"send-all-chat\", data => {\n      setAllChatData(data);\n      setConstAllChatData(data);\n\n      if (window.innerWidth > 700) {\n        if (data.length > 0) {\n          setRoomId(data[0].sessionId);\n          if (messageRef.current) messageRef.current.scrollIntoView({\n            behavior: \"smooth\"\n          });\n        }\n      }\n    });\n    socket.on(\"client-msg\", function (data) {\n      setAllChatData(data.allchat);\n      setConstAllChatData(data.allchat);\n      if (messageRef.current) messageRef.current.scrollIntoView({\n        behavior: \"smooth\"\n      });\n    });\n\n    if (window.innerWidth <= 700) {\n      setRoomIndex(null);\n    }\n  }, []);\n\n  const handleOnChange = event => {\n    setChatInput(event.target.value);\n  };\n\n  const sendChatInput = event => {\n    event.preventDefault();\n\n    if (chatInput === \"\") {\n      return;\n    }\n\n    const data = {\n      fromAdmin: true,\n      text: chatInput,\n      time: new Date(),\n      roomId: roomId\n    };\n    socket.emit(\"messageSend-admin\", data);\n    setTimeout(() => {\n      axios.get(`http://localhost:4000/chat`).then(res => {\n        setAllChatData(res.data);\n        setConstAllChatData(res.data);\n        setChatInput(\"\");\n        if (messageRef.current) messageRef.current.scrollIntoView({\n          behavior: \"smooth\"\n        });\n      });\n    }, 100);\n  };\n\n  const messageRef = useRef([]);\n\n  const filterOnSearch = value => {\n    const search = [];\n\n    for (let i in constAllChatData) {\n      if (constAllChatData[i].chatName.toLowerCase().includes(value)) {\n        search.push(constAllChatData[i]);\n      }\n    }\n\n    setAllChatData(search);\n  };\n\n  const sortDateChat = [...allChatData]; // if (allChatData.length > 0) {\n  //     sortDateChat.sort((a,b) => {\n  //         var dateA = new Date(a.chatContent[a.chatContent.length - 1].time)\n  //         var dateB = new Date(b.chatContent[b.chatContent.length - 1].time)\n  //         return dateB - dateA\n  //     })\n  // }\n\n  const [openTimeTooltip, setOpenTimeTooltip] = useState(\"\");\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"boxchat-admin flex\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"boxchat-left\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"boxchat-search\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    placeholder: \"Search\",\n    value: searchInput,\n    onChange: event => {\n      setSearchInput(event.target.value);\n      filterOnSearch(event.target.value);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 11\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"boxchat-list\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 9\n    }\n  }, sortDateChat.length > 0 && sortDateChat.map((item, index) => {\n    const date = new Date(item.chatContent[item.chatContent.length - 1].time);\n    const toDay = new Date();\n    const day = date.getDay();\n    const dayInMonth = date.getDate();\n    const month = date.getMonth() + 1;\n    const hour = date.getHours();\n    const minute = date.getMinutes();\n    var strTime = \"\";\n\n    if (dayInMonth === toDay.getDate()) {\n      if (hour < 10) {\n        strTime += `- 0${hour}`;\n      } else {\n        strTime += `- ${hour}`;\n      }\n\n      if (minute < 10) {\n        strTime += `:0${minute}`;\n      } else {\n        strTime += `:${minute}`;\n      }\n    }\n\n    if (dayInMonth < toDay.getDate()) {\n      strTime = `- T${day}`;\n    }\n\n    if (toDay.getDate() - dayInMonth > 6) {\n      strTime = \"\";\n\n      if (dayInMonth < 10) {\n        strTime += `- 0${dayInMonth}`;\n      } else {\n        strTime += `- ${dayInMonth}`;\n      }\n\n      if (month < 10) {\n        strTime += `/0${month}`;\n      } else {\n        strTime += `/${month}`;\n      }\n    }\n\n    return /*#__PURE__*/React.createElement(\"div\", {\n      key: index,\n      className: roomIndex === index ? \"boxchat-item flex boxchat-item-active\" : \"boxchat-item flex\",\n      onClick: () => {\n        setRoomId(item.sessionId);\n        setRoomIndex(index);\n        setTimeout(() => {\n          if (messageRef.current) messageRef.current.scrollIntoView({\n            behavior: \"smooth\"\n          });\n        }, 10);\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 156,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"boxchat-avt flex-center\",\n      style: {\n        pointerEvents: \"none\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 174,\n        columnNumber: 19\n      }\n    }, item.userInfo && /*#__PURE__*/React.createElement(\"img\", {\n      src: \"data:image/png;base64,\" + item.userInfo.userAvt,\n      alt: \"\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 179,\n        columnNumber: 23\n      }\n    }), !item.userInfo && /*#__PURE__*/React.createElement(\"img\", {\n      src: \"http://localhost:4000/images/16f9bbf512b66a228f7978e34d8fb163\",\n      alt: \"\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 185,\n        columnNumber: 23\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"flex-col\",\n      style: {\n        pointerEvents: \"none\",\n        width: \"100%\",\n        justifyContent: \"space-between\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 193,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(\"p\", {\n      className: \"boxchat-name\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 201,\n        columnNumber: 21\n      }\n    }, item.chatName), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"boxchat-first flex\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 202,\n        columnNumber: 21\n      }\n    }, item.chatContent[item.chatContent.length - 1].fromAdmin === true && /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 205,\n        columnNumber: 25\n      }\n    }, \"B\\u1EA1n:\", \" \", item.chatContent[item.chatContent.length - 1].text), !item.chatContent[item.chatContent.length - 1].fromAdmin && /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 212,\n        columnNumber: 25\n      }\n    }, item.chatContent[item.chatContent.length - 1].text), /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 216,\n        columnNumber: 23\n      }\n    }, strTime))));\n  }))), typeof roomIndex === \"number\" && window.innerWidth <= 700 && /*#__PURE__*/React.createElement(\"div\", {\n    className: \"boxchat-mobile flex\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 225,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"boxchat-mobile-header flex\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 226,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"boxchat-mobile-header-leave\",\n    onClick: () => {\n      setRoomIndex(null);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 227,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(FontAwesomeIcon, {\n    icon: faChevronLeft,\n    style: {\n      pointerEvents: \"none\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 233,\n      columnNumber: 15\n    }\n  })), sortDateChat.length > 0 && /*#__PURE__*/React.createElement(\"div\", {\n    className: \"boxchat-box-info\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 239,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"boxchat-box-avt flex-center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 240,\n      columnNumber: 17\n    }\n  }, sortDateChat[Number(roomIndex)].userInfo && /*#__PURE__*/React.createElement(\"img\", {\n    src: \"data:image/png;base64,\" + sortDateChat[Number(roomIndex)].userInfo.userAvt,\n    alt: \"\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 242,\n      columnNumber: 21\n    }\n  }), !sortDateChat[Number(roomIndex)].userInfo && /*#__PURE__*/React.createElement(\"img\", {\n    src: \"http://localhost:4000/images/16f9bbf512b66a228f7978e34d8fb163\",\n    alt: \"\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 251,\n      columnNumber: 21\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"flex-center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 259,\n      columnNumber: 17\n    }\n  }, sortDateChat[Number(roomIndex)].userInfo && /*#__PURE__*/React.createElement(\"p\", {\n    className: \"boxchat-name\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 261,\n      columnNumber: 21\n    }\n  }, allChatData[Number(roomIndex)].chatName), !sortDateChat[Number(roomIndex)].userInfo && /*#__PURE__*/React.createElement(\"div\", {\n    className: \"flex\",\n    style: {\n      alignItems: \"flex-end\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 266,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    className: \"boxchat-name\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 267,\n      columnNumber: 23\n    }\n  }, allChatData[Number(roomIndex)].chatName), /*#__PURE__*/React.createElement(\"p\", {\n    style: {\n      marginLeft: \"5px\",\n      color: \"#777\",\n      fontSize: \"16px\",\n      fontFamily: \"sans-serif\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 270,\n      columnNumber: 23\n    }\n  }, \"(anonymous)\"))))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"boxchat-mobile-main\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 286,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"boxchat-contents\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 287,\n      columnNumber: 13\n    }\n  }, sortDateChat.length > 0 && /*#__PURE__*/React.createElement(\"div\", {\n    className: \"flex-col chat-box-list\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 289,\n      columnNumber: 17\n    }\n  }, sortDateChat[roomIndex].chatContent.map((item, index) => {\n    const date = new Date(item.time);\n    const toDay = new Date();\n    const day = date.getDay();\n    const dayInMonth = date.getDate();\n    const month = date.getMonth() + 1;\n    const hour = date.getHours();\n    const minute = date.getMinutes();\n    let chatTime = \"\";\n\n    if (dayInMonth === toDay.getDate()) {\n      if (hour < 10) {\n        chatTime += `0${hour}`;\n      } else {\n        chatTime += `${hour}`;\n      }\n\n      if (minute < 10) {\n        chatTime += `:0${minute}`;\n      } else {\n        chatTime += `:${minute}`;\n      }\n    }\n\n    if (dayInMonth < toDay.getDate()) {\n      chatTime = `T${day}`;\n    }\n\n    if (toDay.getDate() - dayInMonth > 6) {\n      chatTime = \"\";\n\n      if (dayInMonth < 10) {\n        chatTime += `0${dayInMonth}`;\n      } else {\n        chatTime += `${dayInMonth}`;\n      }\n\n      if (month < 10) {\n        chatTime += `/0${month}`;\n      } else {\n        chatTime += `/${month}`;\n      }\n    }\n\n    return /*#__PURE__*/React.createElement(\"div\", {\n      ref: messageRef,\n      key: index,\n      className: \"chat-list\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 328,\n        columnNumber: 23\n      }\n    }, item.fromAdmin !== true && /*#__PURE__*/React.createElement(\"div\", {\n      className: \"box-chat-clienttext\",\n      onMouseEnter: () => {\n        setOpenTimeTooltip(item.time);\n      },\n      onMouseLeave: () => {\n        setOpenTimeTooltip(\"\");\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 330,\n        columnNumber: 27\n      }\n    }, /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 339,\n        columnNumber: 29\n      }\n    }, item.text), openTimeTooltip === item.time && /*#__PURE__*/React.createElement(\"div\", {\n      className: \"time-tooltip-client flex-center\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 341,\n        columnNumber: 31\n      }\n    }, /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 342,\n        columnNumber: 33\n      }\n    }, chatTime))), item.fromAdmin === true && /*#__PURE__*/React.createElement(\"div\", {\n      className: \"box-chat-admintext\",\n      onMouseEnter: () => {\n        setOpenTimeTooltip(item.time);\n      },\n      onMouseLeave: () => {\n        setOpenTimeTooltip(\"\");\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 348,\n        columnNumber: 27\n      }\n    }, /*#__PURE__*/React.createElement(\"p\", {\n      style: {\n        pointerEvents: \"none\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 357,\n        columnNumber: 29\n      }\n    }, item.text), openTimeTooltip === item.time && /*#__PURE__*/React.createElement(\"div\", {\n      className: \"time-tooltip flex-center\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 359,\n        columnNumber: 31\n      }\n    }, /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 360,\n        columnNumber: 33\n      }\n    }, chatTime))));\n  })))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"boxchat-type boxchat-mobile-type\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 372,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"form\", {\n    onSubmit: sendChatInput,\n    className: \"boxchat-type-form\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 373,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    onChange: handleOnChange,\n    value: chatInput,\n    placeholder: \"Type your message...\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 374,\n      columnNumber: 15\n    }\n  }), /*#__PURE__*/React.createElement(\"button\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 380,\n      columnNumber: 15\n    }\n  }, \"Send\")))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"boxchat-main\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 385,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"boxchat-box\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 386,\n      columnNumber: 9\n    }\n  }, sortDateChat.length > 0 && /*#__PURE__*/React.createElement(\"div\", {\n    className: \"boxchat-box-info\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 388,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"boxchat-box-avt flex-center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 389,\n      columnNumber: 15\n    }\n  }, sortDateChat[Number(roomIndex)].userInfo && /*#__PURE__*/React.createElement(\"img\", {\n    src: \"data:image/png;base64,\" + sortDateChat[Number(roomIndex)].userInfo.userAvt,\n    alt: \"\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 391,\n      columnNumber: 19\n    }\n  }), !sortDateChat[Number(roomIndex)].userInfo && /*#__PURE__*/React.createElement(\"img\", {\n    src: \"http://localhost:4000/images/16f9bbf512b66a228f7978e34d8fb163\",\n    alt: \"\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 400,\n      columnNumber: 19\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"flex-center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 408,\n      columnNumber: 15\n    }\n  }, sortDateChat[Number(roomIndex)].userInfo && /*#__PURE__*/React.createElement(\"p\", {\n    className: \"boxchat-name\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 410,\n      columnNumber: 19\n    }\n  }, allChatData[Number(roomIndex)].chatName), !sortDateChat[Number(roomIndex)].userInfo && /*#__PURE__*/React.createElement(\"div\", {\n    className: \"flex\",\n    style: {\n      alignItems: \"flex-end\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 415,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    className: \"boxchat-name\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 416,\n      columnNumber: 21\n    }\n  }, allChatData[Number(roomIndex)].chatName), /*#__PURE__*/React.createElement(\"p\", {\n    style: {\n      marginLeft: \"5px\",\n      color: \"#777\",\n      fontSize: \"16px\",\n      fontFamily: \"sans-serif\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 419,\n      columnNumber: 21\n    }\n  }, \"(anonymous)\")))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"boxchat-contents\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 434,\n      columnNumber: 11\n    }\n  }, sortDateChat.length > 0 && window.innerWidth > 700 && /*#__PURE__*/React.createElement(\"div\", {\n    className: \"flex-col chat-box-list\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 436,\n      columnNumber: 15\n    }\n  }, sortDateChat[roomIndex].chatContent.map((item, index) => {\n    const date = new Date(item.time);\n    const toDay = new Date();\n    const day = date.getDay();\n    const dayInMonth = date.getDate();\n    const month = date.getMonth() + 1;\n    const hour = date.getHours();\n    const minute = date.getMinutes();\n    let chatTime = \"\";\n\n    if (dayInMonth === toDay.getDate()) {\n      if (hour < 10) {\n        chatTime += `0${hour}`;\n      } else {\n        chatTime += `${hour}`;\n      }\n\n      if (minute < 10) {\n        chatTime += `:0${minute}`;\n      } else {\n        chatTime += `:${minute}`;\n      }\n    }\n\n    if (dayInMonth < toDay.getDate()) {\n      chatTime = `T${day}`;\n    }\n\n    if (toDay.getDate() - dayInMonth > 6) {\n      chatTime = \"\";\n\n      if (dayInMonth < 10) {\n        chatTime += `0${dayInMonth}`;\n      } else {\n        chatTime += `${dayInMonth}`;\n      }\n\n      if (month < 10) {\n        chatTime += `/0${month}`;\n      } else {\n        chatTime += `/${month}`;\n      }\n    }\n\n    return /*#__PURE__*/React.createElement(\"div\", {\n      ref: messageRef,\n      key: index,\n      className: \"chat-list\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 475,\n        columnNumber: 21\n      }\n    }, item.fromAdmin !== true && /*#__PURE__*/React.createElement(\"div\", {\n      className: \"box-chat-clienttext\",\n      onMouseEnter: () => {\n        setOpenTimeTooltip(item.time);\n      },\n      onMouseLeave: () => {\n        setOpenTimeTooltip(\"\");\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 477,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 486,\n        columnNumber: 27\n      }\n    }, item.text), openTimeTooltip === item.time && /*#__PURE__*/React.createElement(\"div\", {\n      className: \"time-tooltip-client flex-center\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 488,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 489,\n        columnNumber: 31\n      }\n    }, chatTime))), item.fromAdmin === true && /*#__PURE__*/React.createElement(\"div\", {\n      className: \"box-chat-admintext\",\n      onMouseEnter: () => {\n        setOpenTimeTooltip(item.time);\n      },\n      onMouseLeave: () => {\n        setOpenTimeTooltip(\"\");\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 495,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(\"p\", {\n      style: {\n        pointerEvents: \"none\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 504,\n        columnNumber: 27\n      }\n    }, item.text), openTimeTooltip === item.time && /*#__PURE__*/React.createElement(\"div\", {\n      className: \"time-tooltip flex-center\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 506,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 507,\n        columnNumber: 31\n      }\n    }, chatTime))));\n  })))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"boxchat-type\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 519,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"form\", {\n    onSubmit: sendChatInput,\n    className: \"boxchat-type-form\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 520,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    onChange: handleOnChange,\n    value: chatInput,\n    placeholder: \"Type your message...\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 521,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"button\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 527,\n      columnNumber: 13\n    }\n  }, \"Send\")))));\n}","map":{"version":3,"sources":["C:/Users/Admin/Desktop/freelancerCoder/Ecommerce/frontend/src/components/admin/Dashboard/Inbox/DashboardInbox.js"],"names":["React","useRef","useEffect","useState","socketIOClient","axios","FontAwesomeIcon","faChevronLeft","ENDPOINT","DashboardInbox","props","allChatData","setAllChatData","constAllChatData","setConstAllChatData","roomId","setRoomId","roomIndex","setRoomIndex","chatInput","setChatInput","searchInput","setSearchInput","socket","emit","sessionId","isAdmin","on","data","window","innerWidth","length","messageRef","current","scrollIntoView","behavior","allchat","handleOnChange","event","target","value","sendChatInput","preventDefault","fromAdmin","text","time","Date","setTimeout","get","then","res","filterOnSearch","search","i","chatName","toLowerCase","includes","push","sortDateChat","openTimeTooltip","setOpenTimeTooltip","map","item","index","date","chatContent","toDay","day","getDay","dayInMonth","getDate","month","getMonth","hour","getHours","minute","getMinutes","strTime","pointerEvents","userInfo","userAvt","width","justifyContent","Number","alignItems","marginLeft","color","fontSize","fontFamily","chatTime"],"mappings":"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","sourcesContent":["import React, { useRef } from \"react\";\r\nimport \"../../../../App.css\";\r\nimport \"../../../../Styles/Dashboard.css\";\r\nimport { useEffect, useState } from \"react\";\r\nimport socketIOClient from \"socket.io-client\";\r\nimport axios from \"axios\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faChevronLeft } from \"@fortawesome/free-solid-svg-icons\";\r\n\r\nconst ENDPOINT = \"http://localhost:4000\";\r\n\r\nexport default function DashboardInbox(props) {\r\n  const [allChatData, setAllChatData] = useState([]);\r\n  const [constAllChatData, setConstAllChatData] = useState([]);\r\n  const [roomId, setRoomId] = useState(0);\r\n  const [roomIndex, setRoomIndex] = useState(0);\r\n  const [chatInput, setChatInput] = useState(\"\");\r\n  const [searchInput, setSearchInput] = useState(\"\");\r\n\r\n  const socket = socketIOClient(ENDPOINT);\r\n\r\n  useEffect(() => {\r\n    socket.emit(\"join\", {\r\n      sessionId: \"admin\",\r\n      isAdmin: true,\r\n    });\r\n    socket.on(\"send-all-chat\", (data) => {\r\n      setAllChatData(data);\r\n      setConstAllChatData(data);\r\n      if (window.innerWidth > 700) {\r\n        if (data.length > 0) {\r\n          setRoomId(data[0].sessionId);\r\n          if (messageRef.current)\r\n            messageRef.current.scrollIntoView({ behavior: \"smooth\" });\r\n        }\r\n      }\r\n    });\r\n    socket.on(\"client-msg\", function (data) {\r\n      setAllChatData(data.allchat);\r\n      setConstAllChatData(data.allchat);\r\n      if (messageRef.current)\r\n        messageRef.current.scrollIntoView({ behavior: \"smooth\" });\r\n    });\r\n    if (window.innerWidth <= 700) {\r\n      setRoomIndex(null);\r\n    }\r\n  }, []);\r\n\r\n  const handleOnChange = (event) => {\r\n    setChatInput(event.target.value);\r\n  };\r\n\r\n  const sendChatInput = (event) => {\r\n    event.preventDefault();\r\n    if (chatInput === \"\") {\r\n      return;\r\n    }\r\n    const data = {\r\n      fromAdmin: true,\r\n      text: chatInput,\r\n      time: new Date(),\r\n      roomId: roomId,\r\n    };\r\n    socket.emit(\"messageSend-admin\", data);\r\n    setTimeout(() => {\r\n      axios.get(`http://localhost:4000/chat`).then((res) => {\r\n        setAllChatData(res.data);\r\n        setConstAllChatData(res.data);\r\n        setChatInput(\"\");\r\n        if (messageRef.current)\r\n          messageRef.current.scrollIntoView({ behavior: \"smooth\" });\r\n      });\r\n    }, 100);\r\n  };\r\n\r\n  const messageRef = useRef([]);\r\n\r\n  const filterOnSearch = (value) => {\r\n    const search = [];\r\n    for (let i in constAllChatData) {\r\n      if (constAllChatData[i].chatName.toLowerCase().includes(value)) {\r\n        search.push(constAllChatData[i]);\r\n      }\r\n    }\r\n    setAllChatData(search);\r\n  };\r\n\r\n  const sortDateChat = [...allChatData];\r\n  // if (allChatData.length > 0) {\r\n\r\n  //     sortDateChat.sort((a,b) => {\r\n  //         var dateA = new Date(a.chatContent[a.chatContent.length - 1].time)\r\n  //         var dateB = new Date(b.chatContent[b.chatContent.length - 1].time)\r\n  //         return dateB - dateA\r\n  //     })\r\n  // }\r\n\r\n  const [openTimeTooltip, setOpenTimeTooltip] = useState(\"\");\r\n\r\n  return (\r\n    <div className=\"boxchat-admin flex\">\r\n      <div className=\"boxchat-left\">\r\n        <div className=\"boxchat-search\">\r\n          <input\r\n            type=\"text\"\r\n            placeholder=\"Search\"\r\n            value={searchInput}\r\n            onChange={(event) => {\r\n              setSearchInput(event.target.value);\r\n              filterOnSearch(event.target.value);\r\n            }}\r\n          ></input>\r\n        </div>\r\n        <div className=\"boxchat-list\">\r\n          {sortDateChat.length > 0 &&\r\n            sortDateChat.map((item, index) => {\r\n              const date = new Date(\r\n                item.chatContent[item.chatContent.length - 1].time\r\n              );\r\n              const toDay = new Date();\r\n              const day = date.getDay();\r\n              const dayInMonth = date.getDate();\r\n              const month = date.getMonth() + 1;\r\n              const hour = date.getHours();\r\n              const minute = date.getMinutes();\r\n              var strTime = \"\";\r\n              if (dayInMonth === toDay.getDate()) {\r\n                if (hour < 10) {\r\n                  strTime += `- 0${hour}`;\r\n                } else {\r\n                  strTime += `- ${hour}`;\r\n                }\r\n                if (minute < 10) {\r\n                  strTime += `:0${minute}`;\r\n                } else {\r\n                  strTime += `:${minute}`;\r\n                }\r\n              }\r\n              if (dayInMonth < toDay.getDate()) {\r\n                strTime = `- T${day}`;\r\n              }\r\n              if (toDay.getDate() - dayInMonth > 6) {\r\n                strTime = \"\";\r\n                if (dayInMonth < 10) {\r\n                  strTime += `- 0${dayInMonth}`;\r\n                } else {\r\n                  strTime += `- ${dayInMonth}`;\r\n                }\r\n                if (month < 10) {\r\n                  strTime += `/0${month}`;\r\n                } else {\r\n                  strTime += `/${month}`;\r\n                }\r\n              }\r\n              return (\r\n                <div\r\n                  key={index}\r\n                  className={\r\n                    roomIndex === index\r\n                      ? \"boxchat-item flex boxchat-item-active\"\r\n                      : \"boxchat-item flex\"\r\n                  }\r\n                  onClick={() => {\r\n                    setRoomId(item.sessionId);\r\n                    setRoomIndex(index);\r\n                    setTimeout(() => {\r\n                      if (messageRef.current)\r\n                        messageRef.current.scrollIntoView({\r\n                          behavior: \"smooth\",\r\n                        });\r\n                    }, 10);\r\n                  }}\r\n                >\r\n                  <div\r\n                    className=\"boxchat-avt flex-center\"\r\n                    style={{ pointerEvents: \"none\" }}\r\n                  >\r\n                    {item.userInfo && (\r\n                      <img\r\n                        src={\"data:image/png;base64,\" + item.userInfo.userAvt}\r\n                        alt=\"\"\r\n                      ></img>\r\n                    )}\r\n                    {!item.userInfo && (\r\n                      <img\r\n                        src={\r\n                          \"http://localhost:4000/images/16f9bbf512b66a228f7978e34d8fb163\"\r\n                        }\r\n                        alt=\"\"\r\n                      ></img>\r\n                    )}\r\n                  </div>\r\n                  <div\r\n                    className=\"flex-col\"\r\n                    style={{\r\n                      pointerEvents: \"none\",\r\n                      width: \"100%\",\r\n                      justifyContent: \"space-between\",\r\n                    }}\r\n                  >\r\n                    <p className=\"boxchat-name\">{item.chatName}</p>\r\n                    <div className=\"boxchat-first flex\">\r\n                      {item.chatContent[item.chatContent.length - 1]\r\n                        .fromAdmin === true && (\r\n                        <p>\r\n                          Bạn:{\" \"}\r\n                          {item.chatContent[item.chatContent.length - 1].text}\r\n                        </p>\r\n                      )}\r\n                      {!item.chatContent[item.chatContent.length - 1]\r\n                        .fromAdmin && (\r\n                        <p>\r\n                          {item.chatContent[item.chatContent.length - 1].text}\r\n                        </p>\r\n                      )}\r\n                      <p>{strTime}</p>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              );\r\n            })}\r\n        </div>\r\n      </div>\r\n      {typeof roomIndex === \"number\" && window.innerWidth <= 700 && (\r\n        <div className=\"boxchat-mobile flex\">\r\n          <div className=\"boxchat-mobile-header flex\">\r\n            <div\r\n              className=\"boxchat-mobile-header-leave\"\r\n              onClick={() => {\r\n                setRoomIndex(null);\r\n              }}\r\n            >\r\n              <FontAwesomeIcon\r\n                icon={faChevronLeft}\r\n                style={{ pointerEvents: \"none\" }}\r\n              />\r\n            </div>\r\n            {sortDateChat.length > 0 && (\r\n              <div className=\"boxchat-box-info\">\r\n                <div className=\"boxchat-box-avt flex-center\">\r\n                  {sortDateChat[Number(roomIndex)].userInfo && (\r\n                    <img\r\n                      src={\r\n                        \"data:image/png;base64,\" +\r\n                        sortDateChat[Number(roomIndex)].userInfo.userAvt\r\n                      }\r\n                      alt=\"\"\r\n                    ></img>\r\n                  )}\r\n                  {!sortDateChat[Number(roomIndex)].userInfo && (\r\n                    <img\r\n                      src={\r\n                        \"http://localhost:4000/images/16f9bbf512b66a228f7978e34d8fb163\"\r\n                      }\r\n                      alt=\"\"\r\n                    ></img>\r\n                  )}\r\n                </div>\r\n                <div className=\"flex-center\">\r\n                  {sortDateChat[Number(roomIndex)].userInfo && (\r\n                    <p className=\"boxchat-name\">\r\n                      {allChatData[Number(roomIndex)].chatName}\r\n                    </p>\r\n                  )}\r\n                  {!sortDateChat[Number(roomIndex)].userInfo && (\r\n                    <div className=\"flex\" style={{ alignItems: \"flex-end\" }}>\r\n                      <p className=\"boxchat-name\">\r\n                        {allChatData[Number(roomIndex)].chatName}\r\n                      </p>\r\n                      <p\r\n                        style={{\r\n                          marginLeft: \"5px\",\r\n                          color: \"#777\",\r\n                          fontSize: \"16px\",\r\n                          fontFamily: \"sans-serif\",\r\n                        }}\r\n                      >\r\n                        (anonymous)\r\n                      </p>\r\n                    </div>\r\n                  )}\r\n                </div>\r\n              </div>\r\n            )}\r\n          </div>\r\n          <div className=\"boxchat-mobile-main\">\r\n            <div className=\"boxchat-contents\">\r\n              {sortDateChat.length > 0 && (\r\n                <div className=\"flex-col chat-box-list\">\r\n                  {sortDateChat[roomIndex].chatContent.map((item, index) => {\r\n                    const date = new Date(item.time);\r\n                    const toDay = new Date();\r\n                    const day = date.getDay();\r\n                    const dayInMonth = date.getDate();\r\n                    const month = date.getMonth() + 1;\r\n                    const hour = date.getHours();\r\n                    const minute = date.getMinutes();\r\n                    let chatTime = \"\";\r\n                    if (dayInMonth === toDay.getDate()) {\r\n                      if (hour < 10) {\r\n                        chatTime += `0${hour}`;\r\n                      } else {\r\n                        chatTime += `${hour}`;\r\n                      }\r\n                      if (minute < 10) {\r\n                        chatTime += `:0${minute}`;\r\n                      } else {\r\n                        chatTime += `:${minute}`;\r\n                      }\r\n                    }\r\n                    if (dayInMonth < toDay.getDate()) {\r\n                      chatTime = `T${day}`;\r\n                    }\r\n                    if (toDay.getDate() - dayInMonth > 6) {\r\n                      chatTime = \"\";\r\n                      if (dayInMonth < 10) {\r\n                        chatTime += `0${dayInMonth}`;\r\n                      } else {\r\n                        chatTime += `${dayInMonth}`;\r\n                      }\r\n                      if (month < 10) {\r\n                        chatTime += `/0${month}`;\r\n                      } else {\r\n                        chatTime += `/${month}`;\r\n                      }\r\n                    }\r\n                    return (\r\n                      <div ref={messageRef} key={index} className=\"chat-list\">\r\n                        {item.fromAdmin !== true && (\r\n                          <div\r\n                            className=\"box-chat-clienttext\"\r\n                            onMouseEnter={() => {\r\n                              setOpenTimeTooltip(item.time);\r\n                            }}\r\n                            onMouseLeave={() => {\r\n                              setOpenTimeTooltip(\"\");\r\n                            }}\r\n                          >\r\n                            <p>{item.text}</p>\r\n                            {openTimeTooltip === item.time && (\r\n                              <div className=\"time-tooltip-client flex-center\">\r\n                                <p>{chatTime}</p>\r\n                              </div>\r\n                            )}\r\n                          </div>\r\n                        )}\r\n                        {item.fromAdmin === true && (\r\n                          <div\r\n                            className=\"box-chat-admintext\"\r\n                            onMouseEnter={() => {\r\n                              setOpenTimeTooltip(item.time);\r\n                            }}\r\n                            onMouseLeave={() => {\r\n                              setOpenTimeTooltip(\"\");\r\n                            }}\r\n                          >\r\n                            <p style={{ pointerEvents: \"none\" }}>{item.text}</p>\r\n                            {openTimeTooltip === item.time && (\r\n                              <div className=\"time-tooltip flex-center\">\r\n                                <p>{chatTime}</p>\r\n                              </div>\r\n                            )}\r\n                          </div>\r\n                        )}\r\n                      </div>\r\n                    );\r\n                  })}\r\n                </div>\r\n              )}\r\n            </div>\r\n          </div>\r\n          <div className=\"boxchat-type boxchat-mobile-type\">\r\n            <form onSubmit={sendChatInput} className=\"boxchat-type-form\">\r\n              <input\r\n                type=\"text\"\r\n                onChange={handleOnChange}\r\n                value={chatInput}\r\n                placeholder=\"Type your message...\"\r\n              ></input>\r\n              <button>Send</button>\r\n            </form>\r\n          </div>\r\n        </div>\r\n      )}\r\n      <div className=\"boxchat-main\">\r\n        <div className=\"boxchat-box\">\r\n          {sortDateChat.length > 0 && (\r\n            <div className=\"boxchat-box-info\">\r\n              <div className=\"boxchat-box-avt flex-center\">\r\n                {sortDateChat[Number(roomIndex)].userInfo && (\r\n                  <img\r\n                    src={\r\n                      \"data:image/png;base64,\" +\r\n                      sortDateChat[Number(roomIndex)].userInfo.userAvt\r\n                    }\r\n                    alt=\"\"\r\n                  ></img>\r\n                )}\r\n                {!sortDateChat[Number(roomIndex)].userInfo && (\r\n                  <img\r\n                    src={\r\n                      \"http://localhost:4000/images/16f9bbf512b66a228f7978e34d8fb163\"\r\n                    }\r\n                    alt=\"\"\r\n                  ></img>\r\n                )}\r\n              </div>\r\n              <div className=\"flex-center\">\r\n                {sortDateChat[Number(roomIndex)].userInfo && (\r\n                  <p className=\"boxchat-name\">\r\n                    {allChatData[Number(roomIndex)].chatName}\r\n                  </p>\r\n                )}\r\n                {!sortDateChat[Number(roomIndex)].userInfo && (\r\n                  <div className=\"flex\" style={{ alignItems: \"flex-end\" }}>\r\n                    <p className=\"boxchat-name\">\r\n                      {allChatData[Number(roomIndex)].chatName}\r\n                    </p>\r\n                    <p\r\n                      style={{\r\n                        marginLeft: \"5px\",\r\n                        color: \"#777\",\r\n                        fontSize: \"16px\",\r\n                        fontFamily: \"sans-serif\",\r\n                      }}\r\n                    >\r\n                      (anonymous)\r\n                    </p>\r\n                  </div>\r\n                )}\r\n              </div>\r\n            </div>\r\n          )}\r\n          <div className=\"boxchat-contents\">\r\n            {sortDateChat.length > 0 && window.innerWidth > 700 && (\r\n              <div className=\"flex-col chat-box-list\">\r\n                {sortDateChat[roomIndex].chatContent.map((item, index) => {\r\n                  const date = new Date(item.time);\r\n                  const toDay = new Date();\r\n                  const day = date.getDay();\r\n                  const dayInMonth = date.getDate();\r\n                  const month = date.getMonth() + 1;\r\n                  const hour = date.getHours();\r\n                  const minute = date.getMinutes();\r\n                  let chatTime = \"\";\r\n                  if (dayInMonth === toDay.getDate()) {\r\n                    if (hour < 10) {\r\n                      chatTime += `0${hour}`;\r\n                    } else {\r\n                      chatTime += `${hour}`;\r\n                    }\r\n                    if (minute < 10) {\r\n                      chatTime += `:0${minute}`;\r\n                    } else {\r\n                      chatTime += `:${minute}`;\r\n                    }\r\n                  }\r\n                  if (dayInMonth < toDay.getDate()) {\r\n                    chatTime = `T${day}`;\r\n                  }\r\n                  if (toDay.getDate() - dayInMonth > 6) {\r\n                    chatTime = \"\";\r\n                    if (dayInMonth < 10) {\r\n                      chatTime += `0${dayInMonth}`;\r\n                    } else {\r\n                      chatTime += `${dayInMonth}`;\r\n                    }\r\n                    if (month < 10) {\r\n                      chatTime += `/0${month}`;\r\n                    } else {\r\n                      chatTime += `/${month}`;\r\n                    }\r\n                  }\r\n                  return (\r\n                    <div ref={messageRef} key={index} className=\"chat-list\">\r\n                      {item.fromAdmin !== true && (\r\n                        <div\r\n                          className=\"box-chat-clienttext\"\r\n                          onMouseEnter={() => {\r\n                            setOpenTimeTooltip(item.time);\r\n                          }}\r\n                          onMouseLeave={() => {\r\n                            setOpenTimeTooltip(\"\");\r\n                          }}\r\n                        >\r\n                          <p>{item.text}</p>\r\n                          {openTimeTooltip === item.time && (\r\n                            <div className=\"time-tooltip-client flex-center\">\r\n                              <p>{chatTime}</p>\r\n                            </div>\r\n                          )}\r\n                        </div>\r\n                      )}\r\n                      {item.fromAdmin === true && (\r\n                        <div\r\n                          className=\"box-chat-admintext\"\r\n                          onMouseEnter={() => {\r\n                            setOpenTimeTooltip(item.time);\r\n                          }}\r\n                          onMouseLeave={() => {\r\n                            setOpenTimeTooltip(\"\");\r\n                          }}\r\n                        >\r\n                          <p style={{ pointerEvents: \"none\" }}>{item.text}</p>\r\n                          {openTimeTooltip === item.time && (\r\n                            <div className=\"time-tooltip flex-center\">\r\n                              <p>{chatTime}</p>\r\n                            </div>\r\n                          )}\r\n                        </div>\r\n                      )}\r\n                    </div>\r\n                  );\r\n                })}\r\n              </div>\r\n            )}\r\n          </div>\r\n        </div>\r\n        <div className=\"boxchat-type\">\r\n          <form onSubmit={sendChatInput} className=\"boxchat-type-form\">\r\n            <input\r\n              type=\"text\"\r\n              onChange={handleOnChange}\r\n              value={chatInput}\r\n              placeholder=\"Type your message...\"\r\n            ></input>\r\n            <button>Send</button>\r\n          </form>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}