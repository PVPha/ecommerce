{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Admin\\\\Desktop\\\\freelancerCoder\\\\Ecommerce\\\\frontend\\\\src\\\\components\\\\Product\\\\ProductReview.js\";\nimport React, { useContext, useEffect, useState } from \"react\";\nimport \"../../App.css\";\nimport ReactStars from \"react-rating-stars-component\";\nimport ProductReviewContent from \"./ProductReviewContent\";\nimport { UserContext } from \"../../contexts/User\";\nimport axios from \"axios\";\nexport default function ProductReview(props) {\n  const {\n    userInfo\n  } = useContext(UserContext);\n  const [ratingValue, setRatingValue] = useState(0);\n  const [reviewInput, setReviewInput] = useState(\"\");\n  const [nameInput, setNameInput] = useState(\"\");\n  const [emailInput, setEmailInput] = useState(\"\");\n  const [product, setProduct] = useState([]);\n  const [productVote, setProductVote] = useState([]);\n  useEffect(() => {\n    if (userInfo) {\n      setNameInput(userInfo.userName);\n      setEmailInput(userInfo.userEmail);\n    }\n\n    if (props.product) {\n      setProduct(props.product);\n      setProductVote(props.product.productVote);\n    }\n  }, [userInfo, props.product]);\n  const defaultStar = {\n    size: 24,\n    value: 0,\n    activeColor: \"#fda32a\",\n    color: \"#ddd\",\n    isHalf: true,\n    edit: true,\n    onChange: newValue => {\n      setRatingValue(newValue);\n    }\n  };\n\n  const sendReview = event => {\n    event.preventDefault();\n\n    if (userInfo) {\n      const data = {\n        ratingName: nameInput,\n        ratingDate: new Date().toString(),\n        ratingText: reviewInput,\n        ratingEmail: emailInput,\n        ratingStar: ratingValue,\n        ratingAvt: userInfo.userAvt\n      };\n      axios.post(`http://localhost:4000/products/review/${product._id}`, data);\n      setProductVote(productVote => [...productVote, data]);\n      setReviewInput(\"\");\n    } else {\n      const data = {\n        ratingName: nameInput,\n        ratingDate: new Date().toString(),\n        ratingText: reviewInput,\n        ratingEmail: emailInput,\n        ratingStar: ratingValue,\n        ratingAvt: \"http://localhost:4000/images/16f9bbf512b66a228f7978e34d8fb163\"\n      };\n      axios.post(`http://localhost:4000/products/review/${product._id}`, data);\n      setProductVote(productVote => [...productVote, data]);\n      setReviewInput(\"\");\n    }\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"ProductReview\",\n    ref: props.bRef,\n    id: props.id,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"productreview-container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"productreview-tab flex-center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: props.tabId === 0 ? \"productreview-title search-tab-active\" : \"productreview-title\",\n    onClick: () => {\n      props.setTab(0);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 11\n    }\n  }, \"Description\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: props.tabId === 1 ? \"productreview-title search-tab-active\" : \"productreview-title\",\n    onClick: () => {\n      props.setTab(1);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 11\n    }\n  }, \"Reviews\", /*#__PURE__*/React.createElement(\"span\", {\n    className: props.tabId === 1 ? \"span-active\" : \"\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 13\n    }\n  }, productVote.length))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"productreview-content\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 9\n    }\n  }, props.tabId === 0 && /*#__PURE__*/React.createElement(\"div\", {\n    className: \"productreview-text\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 13\n    }\n  }, product.productDes), props.tabId === 1 && /*#__PURE__*/React.createElement(\"div\", {\n    className: \"productreview-list\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 13\n    }\n  }, productVote.map((item, index) => {\n    const ratingStar = {\n      size: 12,\n      value: item.ratingStar,\n      edit: false,\n      activeColor: \"#fda32a\",\n      color: \"#ddd\",\n      isHalf: true\n    };\n    const date = new Date(item.ratingDate);\n    const day = date.getDate();\n    const month = date.getMonth() + 1;\n    const year = date.getFullYear();\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"productreview-item flex\",\n      key: index,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"reviewer\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"img\", {\n      src: item.ratingAvt,\n      width: \"100%\",\n      height: \"100%\",\n      alt: \"\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 23\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"review-info\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 133,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"review-first flex\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 134,\n        columnNumber: 23\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"reviewer-name\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 135,\n        columnNumber: 25\n      }\n    }, item.ratingName), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"reviewer-ratingStar\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 136,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(ReactStars, Object.assign({}, ratingStar, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 137,\n        columnNumber: 27\n      }\n    })))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"review-second\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 140,\n        columnNumber: 23\n      }\n    }, `${day}-${month}-${year}`), /*#__PURE__*/React.createElement(ProductReviewContent, {\n      content: item.ratingText,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 143,\n        columnNumber: 23\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"productreview-line\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 162,\n        columnNumber: 21\n      }\n    }));\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"productreview-review\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 166,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 167,\n      columnNumber: 17\n    }\n  }, \"Add A Review\"), /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      color: \"#888\",\n      textAlign: \"left\",\n      fontSize: \"12px\",\n      marginBottom: \"20px\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 168,\n      columnNumber: 17\n    }\n  }, \"Your email address will not be published. Required fields are marked *\"), /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      color: \"#888\",\n      fontSize: \"14px\",\n      marginBottom: \"10px\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 179,\n      columnNumber: 17\n    }\n  }, \"Your rating *\"), /*#__PURE__*/React.createElement(ReactStars, Object.assign({}, defaultStar, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 188,\n      columnNumber: 17\n    }\n  })), /*#__PURE__*/React.createElement(\"form\", {\n    className: \"review-form\",\n    onSubmit: sendReview,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 189,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    className: \"review-form-title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 190,\n      columnNumber: 19\n    }\n  }, \"Your review *\"), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    className: \"w-100 no-outline\",\n    name: \"reviewText\",\n    value: reviewInput,\n    onChange: event => {\n      setReviewInput(event.target.value);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 191,\n      columnNumber: 19\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"flex w-100\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 200,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"w-100 mr-2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 201,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    className: \"review-form-title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 202,\n      columnNumber: 23\n    }\n  }, \"Name *\"), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    className: \"w-100 no-outline\",\n    name: \"reviewName\",\n    onChange: event => {\n      setNameInput(event.target.value);\n    },\n    value: nameInput,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 203,\n      columnNumber: 23\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"w-100 ml-2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 213,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    className: \"review-form-title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 214,\n      columnNumber: 23\n    }\n  }, \"Email *\"), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"email\",\n    className: \"w-100 no-outline\",\n    name: \"reviewEmail\",\n    onChange: event => {\n      setEmailInput(event.target.value);\n    },\n    value: emailInput,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 215,\n      columnNumber: 23\n    }\n  }))), /*#__PURE__*/React.createElement(\"button\", {\n    className: \"submit-btn btn\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 226,\n      columnNumber: 19\n    }\n  }, \"Submit\")))))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"product-info-line\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 233,\n      columnNumber: 7\n    }\n  }));\n}","map":{"version":3,"sources":["C:/Users/Admin/Desktop/freelancerCoder/Ecommerce/frontend/src/components/Product/ProductReview.js"],"names":["React","useContext","useEffect","useState","ReactStars","ProductReviewContent","UserContext","axios","ProductReview","props","userInfo","ratingValue","setRatingValue","reviewInput","setReviewInput","nameInput","setNameInput","emailInput","setEmailInput","product","setProduct","productVote","setProductVote","userName","userEmail","defaultStar","size","value","activeColor","color","isHalf","edit","onChange","newValue","sendReview","event","preventDefault","data","ratingName","ratingDate","Date","toString","ratingText","ratingEmail","ratingStar","ratingAvt","userAvt","post","_id","bRef","id","tabId","setTab","length","productDes","map","item","index","date","day","getDate","month","getMonth","year","getFullYear","textAlign","fontSize","marginBottom","target"],"mappings":"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","sourcesContent":["import React, { useContext, useEffect, useState } from \"react\";\r\nimport \"../../App.css\";\r\n\r\nimport ReactStars from \"react-rating-stars-component\";\r\nimport ProductReviewContent from \"./ProductReviewContent\";\r\nimport { UserContext } from \"../../contexts/User\";\r\nimport axios from \"axios\";\r\n\r\nexport default function ProductReview(props) {\r\n  const { userInfo } = useContext(UserContext);\r\n\r\n  const [ratingValue, setRatingValue] = useState(0);\r\n  const [reviewInput, setReviewInput] = useState(\"\");\r\n  const [nameInput, setNameInput] = useState(\"\");\r\n  const [emailInput, setEmailInput] = useState(\"\");\r\n  const [product, setProduct] = useState([]);\r\n  const [productVote, setProductVote] = useState([]);\r\n\r\n  useEffect(() => {\r\n    if (userInfo) {\r\n      setNameInput(userInfo.userName);\r\n      setEmailInput(userInfo.userEmail);\r\n    }\r\n    if (props.product) {\r\n      setProduct(props.product);\r\n      setProductVote(props.product.productVote);\r\n    }\r\n  }, [userInfo, props.product]);\r\n\r\n  const defaultStar = {\r\n    size: 24,\r\n    value: 0,\r\n    activeColor: \"#fda32a\",\r\n    color: \"#ddd\",\r\n    isHalf: true,\r\n    edit: true,\r\n    onChange: (newValue) => {\r\n      setRatingValue(newValue);\r\n    },\r\n  };\r\n\r\n  const sendReview = (event) => {\r\n    event.preventDefault();\r\n    if (userInfo) {\r\n      const data = {\r\n        ratingName: nameInput,\r\n        ratingDate: new Date().toString(),\r\n        ratingText: reviewInput,\r\n        ratingEmail: emailInput,\r\n        ratingStar: ratingValue,\r\n        ratingAvt: userInfo.userAvt,\r\n      };\r\n      axios.post(`http://localhost:4000/products/review/${product._id}`, data);\r\n      setProductVote((productVote) => [...productVote, data]);\r\n      setReviewInput(\"\");\r\n    } else {\r\n      const data = {\r\n        ratingName: nameInput,\r\n        ratingDate: new Date().toString(),\r\n        ratingText: reviewInput,\r\n        ratingEmail: emailInput,\r\n        ratingStar: ratingValue,\r\n        ratingAvt:\r\n          \"http://localhost:4000/images/16f9bbf512b66a228f7978e34d8fb163\",\r\n      };\r\n      axios.post(`http://localhost:4000/products/review/${product._id}`, data);\r\n      setProductVote((productVote) => [...productVote, data]);\r\n      setReviewInput(\"\");\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"ProductReview\" ref={props.bRef} id={props.id}>\r\n      <div className=\"productreview-container\">\r\n        <div className=\"productreview-tab flex-center\">\r\n          <div\r\n            className={\r\n              props.tabId === 0\r\n                ? \"productreview-title search-tab-active\"\r\n                : \"productreview-title\"\r\n            }\r\n            onClick={() => {\r\n              props.setTab(0);\r\n            }}\r\n          >\r\n            Description\r\n          </div>\r\n          <div\r\n            className={\r\n              props.tabId === 1\r\n                ? \"productreview-title search-tab-active\"\r\n                : \"productreview-title\"\r\n            }\r\n            onClick={() => {\r\n              props.setTab(1);\r\n            }}\r\n          >\r\n            Reviews\r\n            <span className={props.tabId === 1 ? \"span-active\" : \"\"}>\r\n              {productVote.length}\r\n            </span>\r\n          </div>\r\n        </div>\r\n        <div className=\"productreview-content\">\r\n          {props.tabId === 0 && (\r\n            <div className=\"productreview-text\">{product.productDes}</div>\r\n          )}\r\n          {props.tabId === 1 && (\r\n            <div className=\"productreview-list\">\r\n              {productVote.map((item, index) => {\r\n                const ratingStar = {\r\n                  size: 12,\r\n                  value: item.ratingStar,\r\n                  edit: false,\r\n                  activeColor: \"#fda32a\",\r\n                  color: \"#ddd\",\r\n                  isHalf: true,\r\n                };\r\n                const date = new Date(item.ratingDate);\r\n                const day = date.getDate();\r\n                const month = date.getMonth() + 1;\r\n                const year = date.getFullYear();\r\n                return (\r\n                  <div className=\"productreview-item flex\" key={index}>\r\n                    <div className=\"reviewer\">\r\n                      <img\r\n                        src={item.ratingAvt}\r\n                        width=\"100%\"\r\n                        height=\"100%\"\r\n                        alt=\"\"\r\n                      ></img>\r\n                    </div>\r\n                    <div className=\"review-info\">\r\n                      <div className=\"review-first flex\">\r\n                        <div className=\"reviewer-name\">{item.ratingName}</div>\r\n                        <div className=\"reviewer-ratingStar\">\r\n                          <ReactStars {...ratingStar} />\r\n                        </div>\r\n                      </div>\r\n                      <div className=\"review-second\">\r\n                        {`${day}-${month}-${year}`}\r\n                      </div>\r\n                      <ProductReviewContent content={item.ratingText} />\r\n                      {/* <div className=\"review-img flex\">\r\n                                                {item.ratingImg.map((item, index) => {\r\n                                                    return (\r\n                                                        <img \r\n                                                            src={item}\r\n                                                            key={index}\r\n                                                            alt=\"\"\r\n                                                            width=\"72px\"\r\n                                                            height=\"72px\"\r\n                                                        ></img>\r\n                                                    )\r\n                                                })}\r\n                                            </div> */}\r\n                      {/* <div className=\"review-like\">\r\n                                                <FontAwesomeIcon icon={faThumbsUp} className=\"mr-5\"></FontAwesomeIcon>\r\n                                                <FontAwesomeIcon icon={faComment}></FontAwesomeIcon>\r\n                                            </div> */}\r\n                    </div>\r\n                    <div className=\"productreview-line\"></div>\r\n                  </div>\r\n                );\r\n              })}\r\n              <div className=\"productreview-review\">\r\n                <div>Add A Review</div>\r\n                <div\r\n                  style={{\r\n                    color: \"#888\",\r\n                    textAlign: \"left\",\r\n                    fontSize: \"12px\",\r\n                    marginBottom: \"20px\",\r\n                  }}\r\n                >\r\n                  Your email address will not be published. Required fields are\r\n                  marked *\r\n                </div>\r\n                <div\r\n                  style={{\r\n                    color: \"#888\",\r\n                    fontSize: \"14px\",\r\n                    marginBottom: \"10px\",\r\n                  }}\r\n                >\r\n                  Your rating *\r\n                </div>\r\n                <ReactStars {...defaultStar} />\r\n                <form className=\"review-form\" onSubmit={sendReview}>\r\n                  <p className=\"review-form-title\">Your review *</p>\r\n                  <input\r\n                    type=\"text\"\r\n                    className=\"w-100 no-outline\"\r\n                    name=\"reviewText\"\r\n                    value={reviewInput}\r\n                    onChange={(event) => {\r\n                      setReviewInput(event.target.value);\r\n                    }}\r\n                  ></input>\r\n                  <div className=\"flex w-100\">\r\n                    <div className=\"w-100 mr-2\">\r\n                      <p className=\"review-form-title\">Name *</p>\r\n                      <input\r\n                        type=\"text\"\r\n                        className=\"w-100 no-outline\"\r\n                        name=\"reviewName\"\r\n                        onChange={(event) => {\r\n                          setNameInput(event.target.value);\r\n                        }}\r\n                        value={nameInput}\r\n                      ></input>\r\n                    </div>\r\n                    <div className=\"w-100 ml-2\">\r\n                      <p className=\"review-form-title\">Email *</p>\r\n                      <input\r\n                        type=\"email\"\r\n                        className=\"w-100 no-outline\"\r\n                        name=\"reviewEmail\"\r\n                        onChange={(event) => {\r\n                          setEmailInput(event.target.value);\r\n                        }}\r\n                        value={emailInput}\r\n                      ></input>\r\n                    </div>\r\n                  </div>\r\n                  <button className=\"submit-btn btn\">Submit</button>\r\n                </form>\r\n              </div>\r\n            </div>\r\n          )}\r\n        </div>\r\n      </div>\r\n      <div className=\"product-info-line\"></div>\r\n    </div>\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}