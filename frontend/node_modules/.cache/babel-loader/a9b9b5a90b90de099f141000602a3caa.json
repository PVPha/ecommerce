{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Admin\\\\Desktop\\\\freelancerCoder\\\\Ecommerce\\\\frontend\\\\src\\\\components\\\\News\\\\NewsBody.js\";\nimport React, { useEffect, useState } from \"react\";\nimport \"../../App.css\";\nimport axios from \"axios\";\nimport { withRouter } from \"react-router-dom\";\nimport NewsNavbar from \"./NewsNavbar\";\nimport NewsBodyBig from \"./NewsBodyBig\";\nimport NewBodySmall from \"./NewBodySmall\";\nimport NewsBodyPag from \"./NewsBodyPag\";\nimport NewsBodyWidget from \"./NewsBodyWidget\";\n\nfunction NewsBody(props) {\n  const [news, setNews] = useState([]);\n  const [currentPage, setCurrentPage] = useState(1);\n  const newsPerPage = 5;\n  const [currentTab, setCurrentTab] = useState(-1);\n  const [currentTabText, setCurrentTabText] = useState(\"\");\n  let firstPost = [];\n  let sortedCate = [];\n  let nextPosts = [];\n  let splicedCate = [];\n  let pages = [];\n  let pageNumbers = []; //Số trang được chia ra\n\n  const [searchNews, setSearchNews] = useState(null);\n  const [searchErr, setSearchErr] = useState(null);\n  useEffect(() => {\n    if (searchNews) {\n      axios.get(`http://localhost:4000/news`).then(res => {\n        const search = [];\n\n        for (let i in res.data) {\n          if (res.data[i].newTitle.toLowerCase().includes(searchNews)) {\n            search.push(res.data[i]);\n          }\n        }\n\n        if (search.length > 0) {\n          setNews(search);\n          setSearchErr(null);\n        } else {\n          setSearchErr(\"No results found\");\n        }\n      });\n    } else {\n      if (props.history.location.pathname === \"/news\") {\n        axios.get(`http://localhost:4000/news`).then(res => {\n          setNews(res.data);\n        });\n      } else {\n        axios.get(`http://localhost:4000/news/category/${props.match.params.cate}`).then(res => {\n          setNews(res.data);\n        });\n      }\n    }\n  }, [props.history.location.pathname, props.match.params.cate, searchNews]);\n\n  const choosePage = event => {\n    window.scrollTo(0, 0);\n\n    if (Number(event.target.id) === 0) {\n      setCurrentPage(currentPage);\n    } else if (Number(event.target.id) === -1) {\n      if (currentPage > 1) {\n        setCurrentPage(currentPage - 1);\n      } else {\n        setCurrentPage(1);\n      }\n    } else if (Number(event.target.id) === 999) {\n      setCurrentPage(currentPage + 1);\n    } else {\n      setCurrentPage(Number(event.target.id));\n    }\n  };\n\n  if (news.length > 0) {\n    //Filt Posts depend on Category\n    let filterNews = [];\n\n    if (currentTab === -1) {\n      filterNews = news;\n    } else if (currentTabText) {\n      filterNews = news.filter(item => {\n        return item.newCate === currentTabText;\n      });\n    } else {\n      filterNews = news;\n    } //Panigation\n\n\n    const indexOfLastNews = currentPage * newsPerPage;\n    const indexOfFirstNews = indexOfLastNews - newsPerPage;\n    const currentNews = filterNews.slice(indexOfFirstNews, indexOfLastNews);\n\n    if (currentNews) {\n      firstPost = currentNews[0]; //Post of big image\n    }\n\n    nextPosts = currentNews.slice(1); //Panigation button\n\n    for (let i = 1; i <= Math.ceil(filterNews.length / newsPerPage); i++) {\n      pageNumbers.push(i);\n    }\n\n    if (currentPage === 2) {\n      pages.push(currentPage - 1, currentPage);\n    } else {\n      if (currentPage === 1 && pageNumbers.length === 1) {\n        pages.push();\n      } else if (currentPage === 1 && currentPage < pageNumbers.length) {\n        pages.push(currentPage, currentPage + 1);\n      } else if (currentPage === 2) {\n        pages.push(currentPage - 1, currentPage);\n      } else if (currentPage > 2 && currentPage < pageNumbers.length - 1) {\n        pages.push(currentPage - 1, currentPage);\n      } else if (currentPage === pageNumbers.length - 1) {\n        pages.push(currentPage - 1, currentPage);\n      } else {\n        pages.push(currentPage - 1, currentPage);\n      }\n    } //Get all category\n\n\n    const cate = Object.values(news.reduce((a, {\n      newCate\n    }) => {\n      a[newCate] = a[newCate] || {\n        newCate,\n        count: 0\n      };\n      a[newCate].count++;\n      return a;\n    }, Object.create(null))); //Sort and splice category by posts count\n\n    cate.sort((a, b) => b.count - a.count);\n    splicedCate = cate.splice(0, 5);\n    splicedCate.sort((a, b) => b.count - a.count);\n\n    for (let i = 0; i < splicedCate.length; i++) {\n      sortedCate.push(splicedCate[i].newCate);\n    }\n  }\n\n  const setCurrentTabFunc = data => {\n    setCurrentTab(data);\n  };\n\n  const setCurrentTabTextFunc = data => {\n    setCurrentTabText(data);\n  };\n\n  const setCurrentPageFunc = data => {\n    setCurrentPage(data);\n  };\n\n  const cateLink = `/news/category/${firstPost.newCate}`;\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"NewsBody\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 146,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(NewsNavbar, {\n    setCurrentTab: setCurrentTabFunc,\n    setCurrentTabText: setCurrentTabTextFunc,\n    setCurrentPage: setCurrentPageFunc,\n    currentTab: currentTab,\n    currentTabText: currentTabText,\n    sortedCate: sortedCate,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 147,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"newsbody-container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 155,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"newsbody-post\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 156,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(NewsBodyBig, {\n    firstPost: firstPost,\n    cateLink: cateLink,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 157,\n      columnNumber: 11\n    }\n  }), nextPosts.map((item, index) => {\n    return /*#__PURE__*/React.createElement(NewBodySmall, {\n      item: item,\n      key: index,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 159,\n        columnNumber: 20\n      }\n    });\n  }), /*#__PURE__*/React.createElement(NewsBodyPag, {\n    choosePage: choosePage,\n    currentPage: currentPage,\n    pages: pages,\n    pageNumbers: pageNumbers,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 161,\n      columnNumber: 11\n    }\n  })), /*#__PURE__*/React.createElement(NewsBodyWidget, {\n    searchErr: searchErr,\n    setSearchNews: setSearchNews,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 168,\n      columnNumber: 9\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"newsbody-line\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 170,\n      columnNumber: 7\n    }\n  }));\n}\n\nexport default withRouter(NewsBody);","map":{"version":3,"sources":["C:/Users/Admin/Desktop/freelancerCoder/Ecommerce/frontend/src/components/News/NewsBody.js"],"names":["React","useEffect","useState","axios","withRouter","NewsNavbar","NewsBodyBig","NewBodySmall","NewsBodyPag","NewsBodyWidget","NewsBody","props","news","setNews","currentPage","setCurrentPage","newsPerPage","currentTab","setCurrentTab","currentTabText","setCurrentTabText","firstPost","sortedCate","nextPosts","splicedCate","pages","pageNumbers","searchNews","setSearchNews","searchErr","setSearchErr","get","then","res","search","i","data","newTitle","toLowerCase","includes","push","length","history","location","pathname","match","params","cate","choosePage","event","window","scrollTo","Number","target","id","filterNews","filter","item","newCate","indexOfLastNews","indexOfFirstNews","currentNews","slice","Math","ceil","Object","values","reduce","a","count","create","sort","b","splice","setCurrentTabFunc","setCurrentTabTextFunc","setCurrentPageFunc","cateLink","map","index"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,OAAO,eAAP;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,UAAT,QAA2B,kBAA3B;AACA,OAAOC,UAAP,MAAuB,cAAvB;AACA,OAAOC,WAAP,MAAwB,eAAxB;AACA,OAAOC,YAAP,MAAyB,gBAAzB;AACA,OAAOC,WAAP,MAAwB,eAAxB;AACA,OAAOC,cAAP,MAA2B,kBAA3B;;AAEA,SAASC,QAAT,CAAkBC,KAAlB,EAAyB;AACvB,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBX,QAAQ,CAAC,EAAD,CAAhC;AACA,QAAM,CAACY,WAAD,EAAcC,cAAd,IAAgCb,QAAQ,CAAC,CAAD,CAA9C;AACA,QAAMc,WAAW,GAAG,CAApB;AACA,QAAM,CAACC,UAAD,EAAaC,aAAb,IAA8BhB,QAAQ,CAAC,CAAC,CAAF,CAA5C;AACA,QAAM,CAACiB,cAAD,EAAiBC,iBAAjB,IAAsClB,QAAQ,CAAC,EAAD,CAApD;AACA,MAAImB,SAAS,GAAG,EAAhB;AACA,MAAIC,UAAU,GAAG,EAAjB;AACA,MAAIC,SAAS,GAAG,EAAhB;AACA,MAAIC,WAAW,GAAG,EAAlB;AACA,MAAIC,KAAK,GAAG,EAAZ;AACA,MAAIC,WAAW,GAAG,EAAlB,CAXuB,CAWD;;AACtB,QAAM,CAACC,UAAD,EAAaC,aAAb,IAA8B1B,QAAQ,CAAC,IAAD,CAA5C;AACA,QAAM,CAAC2B,SAAD,EAAYC,YAAZ,IAA4B5B,QAAQ,CAAC,IAAD,CAA1C;AAEAD,EAAAA,SAAS,CAAC,MAAM;AACd,QAAI0B,UAAJ,EAAgB;AACdxB,MAAAA,KAAK,CAAC4B,GAAN,CAAW,4BAAX,EAAwCC,IAAxC,CAA8CC,GAAD,IAAS;AACpD,cAAMC,MAAM,GAAG,EAAf;;AACA,aAAK,IAAIC,CAAT,IAAcF,GAAG,CAACG,IAAlB,EAAwB;AACtB,cAAIH,GAAG,CAACG,IAAJ,CAASD,CAAT,EAAYE,QAAZ,CAAqBC,WAArB,GAAmCC,QAAnC,CAA4CZ,UAA5C,CAAJ,EAA6D;AAC3DO,YAAAA,MAAM,CAACM,IAAP,CAAYP,GAAG,CAACG,IAAJ,CAASD,CAAT,CAAZ;AACD;AACF;;AACD,YAAID,MAAM,CAACO,MAAP,GAAgB,CAApB,EAAuB;AACrB5B,UAAAA,OAAO,CAACqB,MAAD,CAAP;AACAJ,UAAAA,YAAY,CAAC,IAAD,CAAZ;AACD,SAHD,MAGO;AACLA,UAAAA,YAAY,CAAC,kBAAD,CAAZ;AACD;AACF,OAbD;AAcD,KAfD,MAeO;AACL,UAAInB,KAAK,CAAC+B,OAAN,CAAcC,QAAd,CAAuBC,QAAvB,KAAoC,OAAxC,EAAiD;AAC/CzC,QAAAA,KAAK,CAAC4B,GAAN,CAAW,4BAAX,EAAwCC,IAAxC,CAA8CC,GAAD,IAAS;AACpDpB,UAAAA,OAAO,CAACoB,GAAG,CAACG,IAAL,CAAP;AACD,SAFD;AAGD,OAJD,MAIO;AACLjC,QAAAA,KAAK,CACF4B,GADH,CACQ,uCAAsCpB,KAAK,CAACkC,KAAN,CAAYC,MAAZ,CAAmBC,IAAK,EADtE,EAEGf,IAFH,CAESC,GAAD,IAAS;AACbpB,UAAAA,OAAO,CAACoB,GAAG,CAACG,IAAL,CAAP;AACD,SAJH;AAKD;AACF;AACF,GA7BQ,EA6BN,CAACzB,KAAK,CAAC+B,OAAN,CAAcC,QAAd,CAAuBC,QAAxB,EAAkCjC,KAAK,CAACkC,KAAN,CAAYC,MAAZ,CAAmBC,IAArD,EAA2DpB,UAA3D,CA7BM,CAAT;;AA+BA,QAAMqB,UAAU,GAAIC,KAAD,IAAW;AAC5BC,IAAAA,MAAM,CAACC,QAAP,CAAgB,CAAhB,EAAmB,CAAnB;;AACA,QAAIC,MAAM,CAACH,KAAK,CAACI,MAAN,CAAaC,EAAd,CAAN,KAA4B,CAAhC,EAAmC;AACjCvC,MAAAA,cAAc,CAACD,WAAD,CAAd;AACD,KAFD,MAEO,IAAIsC,MAAM,CAACH,KAAK,CAACI,MAAN,CAAaC,EAAd,CAAN,KAA4B,CAAC,CAAjC,EAAoC;AACzC,UAAIxC,WAAW,GAAG,CAAlB,EAAqB;AACnBC,QAAAA,cAAc,CAACD,WAAW,GAAG,CAAf,CAAd;AACD,OAFD,MAEO;AACLC,QAAAA,cAAc,CAAC,CAAD,CAAd;AACD;AACF,KANM,MAMA,IAAIqC,MAAM,CAACH,KAAK,CAACI,MAAN,CAAaC,EAAd,CAAN,KAA4B,GAAhC,EAAqC;AAC1CvC,MAAAA,cAAc,CAACD,WAAW,GAAG,CAAf,CAAd;AACD,KAFM,MAEA;AACLC,MAAAA,cAAc,CAACqC,MAAM,CAACH,KAAK,CAACI,MAAN,CAAaC,EAAd,CAAP,CAAd;AACD;AACF,GAfD;;AAiBA,MAAI1C,IAAI,CAAC6B,MAAL,GAAc,CAAlB,EAAqB;AACnB;AACA,QAAIc,UAAU,GAAG,EAAjB;;AACA,QAAItC,UAAU,KAAK,CAAC,CAApB,EAAuB;AACrBsC,MAAAA,UAAU,GAAG3C,IAAb;AACD,KAFD,MAEO,IAAIO,cAAJ,EAAoB;AACzBoC,MAAAA,UAAU,GAAG3C,IAAI,CAAC4C,MAAL,CAAaC,IAAD,IAAU;AACjC,eAAOA,IAAI,CAACC,OAAL,KAAiBvC,cAAxB;AACD,OAFY,CAAb;AAGD,KAJM,MAIA;AACLoC,MAAAA,UAAU,GAAG3C,IAAb;AACD,KAXkB,CAYnB;;;AACA,UAAM+C,eAAe,GAAG7C,WAAW,GAAGE,WAAtC;AACA,UAAM4C,gBAAgB,GAAGD,eAAe,GAAG3C,WAA3C;AACA,UAAM6C,WAAW,GAAGN,UAAU,CAACO,KAAX,CAAiBF,gBAAjB,EAAmCD,eAAnC,CAApB;;AACA,QAAIE,WAAJ,EAAiB;AACfxC,MAAAA,SAAS,GAAGwC,WAAW,CAAC,CAAD,CAAvB,CADe,CACa;AAC7B;;AACDtC,IAAAA,SAAS,GAAGsC,WAAW,CAACC,KAAZ,CAAkB,CAAlB,CAAZ,CAnBmB,CAqBnB;;AACA,SAAK,IAAI3B,CAAC,GAAG,CAAb,EAAgBA,CAAC,IAAI4B,IAAI,CAACC,IAAL,CAAUT,UAAU,CAACd,MAAX,GAAoBzB,WAA9B,CAArB,EAAiEmB,CAAC,EAAlE,EAAsE;AACpET,MAAAA,WAAW,CAACc,IAAZ,CAAiBL,CAAjB;AACD;;AACD,QAAIrB,WAAW,KAAK,CAApB,EAAuB;AACrBW,MAAAA,KAAK,CAACe,IAAN,CAAW1B,WAAW,GAAG,CAAzB,EAA4BA,WAA5B;AACD,KAFD,MAEO;AACL,UAAIA,WAAW,KAAK,CAAhB,IAAqBY,WAAW,CAACe,MAAZ,KAAuB,CAAhD,EAAmD;AACjDhB,QAAAA,KAAK,CAACe,IAAN;AACD,OAFD,MAEO,IAAI1B,WAAW,KAAK,CAAhB,IAAqBA,WAAW,GAAGY,WAAW,CAACe,MAAnD,EAA2D;AAChEhB,QAAAA,KAAK,CAACe,IAAN,CAAW1B,WAAX,EAAwBA,WAAW,GAAG,CAAtC;AACD,OAFM,MAEA,IAAIA,WAAW,KAAK,CAApB,EAAuB;AAC5BW,QAAAA,KAAK,CAACe,IAAN,CAAW1B,WAAW,GAAG,CAAzB,EAA4BA,WAA5B;AACD,OAFM,MAEA,IAAIA,WAAW,GAAG,CAAd,IAAmBA,WAAW,GAAGY,WAAW,CAACe,MAAZ,GAAqB,CAA1D,EAA6D;AAClEhB,QAAAA,KAAK,CAACe,IAAN,CAAW1B,WAAW,GAAG,CAAzB,EAA4BA,WAA5B;AACD,OAFM,MAEA,IAAIA,WAAW,KAAKY,WAAW,CAACe,MAAZ,GAAqB,CAAzC,EAA4C;AACjDhB,QAAAA,KAAK,CAACe,IAAN,CAAW1B,WAAW,GAAG,CAAzB,EAA4BA,WAA5B;AACD,OAFM,MAEA;AACLW,QAAAA,KAAK,CAACe,IAAN,CAAW1B,WAAW,GAAG,CAAzB,EAA4BA,WAA5B;AACD;AACF,KAzCkB,CA2CnB;;;AACA,UAAMiC,IAAI,GAAGkB,MAAM,CAACC,MAAP,CACXtD,IAAI,CAACuD,MAAL,CAAY,CAACC,CAAD,EAAI;AAAEV,MAAAA;AAAF,KAAJ,KAAoB;AAC9BU,MAAAA,CAAC,CAACV,OAAD,CAAD,GAAaU,CAAC,CAACV,OAAD,CAAD,IAAc;AAAEA,QAAAA,OAAF;AAAWW,QAAAA,KAAK,EAAE;AAAlB,OAA3B;AACAD,MAAAA,CAAC,CAACV,OAAD,CAAD,CAAWW,KAAX;AACA,aAAOD,CAAP;AACD,KAJD,EAIGH,MAAM,CAACK,MAAP,CAAc,IAAd,CAJH,CADW,CAAb,CA5CmB,CAmDnB;;AACAvB,IAAAA,IAAI,CAACwB,IAAL,CAAU,CAACH,CAAD,EAAII,CAAJ,KAAUA,CAAC,CAACH,KAAF,GAAUD,CAAC,CAACC,KAAhC;AACA7C,IAAAA,WAAW,GAAGuB,IAAI,CAAC0B,MAAL,CAAY,CAAZ,EAAe,CAAf,CAAd;AACAjD,IAAAA,WAAW,CAAC+C,IAAZ,CAAiB,CAACH,CAAD,EAAII,CAAJ,KAAUA,CAAC,CAACH,KAAF,GAAUD,CAAC,CAACC,KAAvC;;AAEA,SAAK,IAAIlC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGX,WAAW,CAACiB,MAAhC,EAAwCN,CAAC,EAAzC,EAA6C;AAC3Cb,MAAAA,UAAU,CAACkB,IAAX,CAAgBhB,WAAW,CAACW,CAAD,CAAX,CAAeuB,OAA/B;AACD;AACF;;AACD,QAAMgB,iBAAiB,GAAItC,IAAD,IAAU;AAClClB,IAAAA,aAAa,CAACkB,IAAD,CAAb;AACD,GAFD;;AAGA,QAAMuC,qBAAqB,GAAIvC,IAAD,IAAU;AACtChB,IAAAA,iBAAiB,CAACgB,IAAD,CAAjB;AACD,GAFD;;AAGA,QAAMwC,kBAAkB,GAAIxC,IAAD,IAAU;AACnCrB,IAAAA,cAAc,CAACqB,IAAD,CAAd;AACD,GAFD;;AAGA,QAAMyC,QAAQ,GAAI,kBAAiBxD,SAAS,CAACqC,OAAQ,EAArD;AAEA,sBACE;AAAK,IAAA,SAAS,EAAC,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,UAAD;AACE,IAAA,aAAa,EAAEgB,iBADjB;AAEE,IAAA,iBAAiB,EAAEC,qBAFrB;AAGE,IAAA,cAAc,EAAEC,kBAHlB;AAIE,IAAA,UAAU,EAAE3D,UAJd;AAKE,IAAA,cAAc,EAAEE,cALlB;AAME,IAAA,UAAU,EAAEG,UANd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,eASE;AAAK,IAAA,SAAS,EAAC,oBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAK,IAAA,SAAS,EAAC,eAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,WAAD;AAAa,IAAA,SAAS,EAAED,SAAxB;AAAmC,IAAA,QAAQ,EAAEwD,QAA7C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAEGtD,SAAS,CAACuD,GAAV,CAAc,CAACrB,IAAD,EAAOsB,KAAP,KAAiB;AAC9B,wBAAO,oBAAC,YAAD;AAAc,MAAA,IAAI,EAAEtB,IAApB;AAA0B,MAAA,GAAG,EAAEsB,KAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAP;AACD,GAFA,CAFH,eAKE,oBAAC,WAAD;AACE,IAAA,UAAU,EAAE/B,UADd;AAEE,IAAA,WAAW,EAAElC,WAFf;AAGE,IAAA,KAAK,EAAEW,KAHT;AAIE,IAAA,WAAW,EAAEC,WAJf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IALF,CADF,eAaE,oBAAC,cAAD;AAAgB,IAAA,SAAS,EAAEG,SAA3B;AAAsC,IAAA,aAAa,EAAED,aAArD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAbF,CATF,eAwBE;AAAK,IAAA,SAAS,EAAC,eAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAxBF,CADF;AA4BD;;AACD,eAAexB,UAAU,CAACM,QAAD,CAAzB","sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport \"../../App.css\";\r\nimport axios from \"axios\";\r\nimport { withRouter } from \"react-router-dom\";\r\nimport NewsNavbar from \"./NewsNavbar\";\r\nimport NewsBodyBig from \"./NewsBodyBig\";\r\nimport NewBodySmall from \"./NewBodySmall\";\r\nimport NewsBodyPag from \"./NewsBodyPag\";\r\nimport NewsBodyWidget from \"./NewsBodyWidget\";\r\n\r\nfunction NewsBody(props) {\r\n  const [news, setNews] = useState([]);\r\n  const [currentPage, setCurrentPage] = useState(1);\r\n  const newsPerPage = 5;\r\n  const [currentTab, setCurrentTab] = useState(-1);\r\n  const [currentTabText, setCurrentTabText] = useState(\"\");\r\n  let firstPost = [];\r\n  let sortedCate = [];\r\n  let nextPosts = [];\r\n  let splicedCate = [];\r\n  let pages = [];\r\n  let pageNumbers = []; //Số trang được chia ra\r\n  const [searchNews, setSearchNews] = useState(null);\r\n  const [searchErr, setSearchErr] = useState(null);\r\n\r\n  useEffect(() => {\r\n    if (searchNews) {\r\n      axios.get(`http://localhost:4000/news`).then((res) => {\r\n        const search = [];\r\n        for (let i in res.data) {\r\n          if (res.data[i].newTitle.toLowerCase().includes(searchNews)) {\r\n            search.push(res.data[i]);\r\n          }\r\n        }\r\n        if (search.length > 0) {\r\n          setNews(search);\r\n          setSearchErr(null);\r\n        } else {\r\n          setSearchErr(\"No results found\");\r\n        }\r\n      });\r\n    } else {\r\n      if (props.history.location.pathname === \"/news\") {\r\n        axios.get(`http://localhost:4000/news`).then((res) => {\r\n          setNews(res.data);\r\n        });\r\n      } else {\r\n        axios\r\n          .get(`http://localhost:4000/news/category/${props.match.params.cate}`)\r\n          .then((res) => {\r\n            setNews(res.data);\r\n          });\r\n      }\r\n    }\r\n  }, [props.history.location.pathname, props.match.params.cate, searchNews]);\r\n\r\n  const choosePage = (event) => {\r\n    window.scrollTo(0, 0);\r\n    if (Number(event.target.id) === 0) {\r\n      setCurrentPage(currentPage);\r\n    } else if (Number(event.target.id) === -1) {\r\n      if (currentPage > 1) {\r\n        setCurrentPage(currentPage - 1);\r\n      } else {\r\n        setCurrentPage(1);\r\n      }\r\n    } else if (Number(event.target.id) === 999) {\r\n      setCurrentPage(currentPage + 1);\r\n    } else {\r\n      setCurrentPage(Number(event.target.id));\r\n    }\r\n  };\r\n\r\n  if (news.length > 0) {\r\n    //Filt Posts depend on Category\r\n    let filterNews = [];\r\n    if (currentTab === -1) {\r\n      filterNews = news;\r\n    } else if (currentTabText) {\r\n      filterNews = news.filter((item) => {\r\n        return item.newCate === currentTabText;\r\n      });\r\n    } else {\r\n      filterNews = news;\r\n    }\r\n    //Panigation\r\n    const indexOfLastNews = currentPage * newsPerPage;\r\n    const indexOfFirstNews = indexOfLastNews - newsPerPage;\r\n    const currentNews = filterNews.slice(indexOfFirstNews, indexOfLastNews);\r\n    if (currentNews) {\r\n      firstPost = currentNews[0]; //Post of big image\r\n    }\r\n    nextPosts = currentNews.slice(1);\r\n\r\n    //Panigation button\r\n    for (let i = 1; i <= Math.ceil(filterNews.length / newsPerPage); i++) {\r\n      pageNumbers.push(i);\r\n    }\r\n    if (currentPage === 2) {\r\n      pages.push(currentPage - 1, currentPage);\r\n    } else {\r\n      if (currentPage === 1 && pageNumbers.length === 1) {\r\n        pages.push();\r\n      } else if (currentPage === 1 && currentPage < pageNumbers.length) {\r\n        pages.push(currentPage, currentPage + 1);\r\n      } else if (currentPage === 2) {\r\n        pages.push(currentPage - 1, currentPage);\r\n      } else if (currentPage > 2 && currentPage < pageNumbers.length - 1) {\r\n        pages.push(currentPage - 1, currentPage);\r\n      } else if (currentPage === pageNumbers.length - 1) {\r\n        pages.push(currentPage - 1, currentPage);\r\n      } else {\r\n        pages.push(currentPage - 1, currentPage);\r\n      }\r\n    }\r\n\r\n    //Get all category\r\n    const cate = Object.values(\r\n      news.reduce((a, { newCate }) => {\r\n        a[newCate] = a[newCate] || { newCate, count: 0 };\r\n        a[newCate].count++;\r\n        return a;\r\n      }, Object.create(null))\r\n    );\r\n    //Sort and splice category by posts count\r\n    cate.sort((a, b) => b.count - a.count);\r\n    splicedCate = cate.splice(0, 5);\r\n    splicedCate.sort((a, b) => b.count - a.count);\r\n\r\n    for (let i = 0; i < splicedCate.length; i++) {\r\n      sortedCate.push(splicedCate[i].newCate);\r\n    }\r\n  }\r\n  const setCurrentTabFunc = (data) => {\r\n    setCurrentTab(data);\r\n  };\r\n  const setCurrentTabTextFunc = (data) => {\r\n    setCurrentTabText(data);\r\n  };\r\n  const setCurrentPageFunc = (data) => {\r\n    setCurrentPage(data);\r\n  };\r\n  const cateLink = `/news/category/${firstPost.newCate}`;\r\n\r\n  return (\r\n    <div className=\"NewsBody\">\r\n      <NewsNavbar\r\n        setCurrentTab={setCurrentTabFunc}\r\n        setCurrentTabText={setCurrentTabTextFunc}\r\n        setCurrentPage={setCurrentPageFunc}\r\n        currentTab={currentTab}\r\n        currentTabText={currentTabText}\r\n        sortedCate={sortedCate}\r\n      />\r\n      <div className=\"newsbody-container\">\r\n        <div className=\"newsbody-post\">\r\n          <NewsBodyBig firstPost={firstPost} cateLink={cateLink} />\r\n          {nextPosts.map((item, index) => {\r\n            return <NewBodySmall item={item} key={index} />;\r\n          })}\r\n          <NewsBodyPag\r\n            choosePage={choosePage}\r\n            currentPage={currentPage}\r\n            pages={pages}\r\n            pageNumbers={pageNumbers}\r\n          />\r\n        </div>\r\n        <NewsBodyWidget searchErr={searchErr} setSearchNews={setSearchNews} />\r\n      </div>\r\n      <div className=\"newsbody-line\"></div>\r\n    </div>\r\n  );\r\n}\r\nexport default withRouter(NewsBody);\r\n"]},"metadata":{},"sourceType":"module"}